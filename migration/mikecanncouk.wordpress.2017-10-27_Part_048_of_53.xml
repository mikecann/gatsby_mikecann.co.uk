<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.8.2" created="2017-10-27 02:33" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>MikeCann.co.uk</title>
	<link>https://www.mikecann.co.uk</link>
	<description>mikey see, mikey do!</description>
	<pubDate>Fri, 27 Oct 2017 02:33:43 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>https://www.mikecann.co.uk</wp:base_site_url>
	<wp:base_blog_url>https://www.mikecann.co.uk</wp:base_blog_url>

	<wp:author><wp:author_id>2</wp:author_id><wp:author_login><![CDATA[admin]]></wp:author_login><wp:author_email><![CDATA[mike.cann@gmail.com]]></wp:author_email><wp:author_display_name><![CDATA[Mike Cann]]></wp:author_display_name><wp:author_first_name><![CDATA[Mike]]></wp:author_first_name><wp:author_last_name><![CDATA[Cann]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>3</wp:author_id><wp:author_login><![CDATA[Above Under - News]]></wp:author_login><wp:author_email><![CDATA[above-under-news@aboveunder.com]]></wp:author_email><wp:author_display_name><![CDATA[Above Under - News]]></wp:author_display_name><wp:author_first_name><![CDATA[Above]]></wp:author_first_name><wp:author_last_name><![CDATA[Under - News]]></wp:author_last_name></wp:author>

	<wp:category>
		<wp:term_id>3</wp:term_id>
		<wp:category_nicename><![CDATA[art]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Art]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>4</wp:term_id>
		<wp:category_nicename><![CDATA[audio]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Audio]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>5</wp:term_id>
		<wp:category_nicename><![CDATA[books]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Books]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>6</wp:term_id>
		<wp:category_nicename><![CDATA[business]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Business]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>9</wp:term_id>
		<wp:category_nicename><![CDATA[community-mixes]]></wp:category_nicename>
		<wp:category_parent><![CDATA[audio]]></wp:category_parent>
		<wp:cat_name><![CDATA[Community Mixes]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>10</wp:term_id>
		<wp:category_nicename><![CDATA[concepts]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Concepts]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>11</wp:term_id>
		<wp:category_nicename><![CDATA[conferences]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Conferences]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>12</wp:term_id>
		<wp:category_nicename><![CDATA[flash]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Flash]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>13</wp:term_id>
		<wp:category_nicename><![CDATA[fun-videos]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Fun &amp; Videos]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>14</wp:term_id>
		<wp:category_nicename><![CDATA[games]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Games]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>686</wp:term_id>
		<wp:category_nicename><![CDATA[hackathons]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Hackathons]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>16</wp:term_id>
		<wp:category_nicename><![CDATA[iphone]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[iPhone]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>18</wp:term_id>
		<wp:category_nicename><![CDATA[ludum-dare]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Ludum Dare]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>700</wp:term_id>
		<wp:category_nicename><![CDATA[media]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Media]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>19</wp:term_id>
		<wp:category_nicename><![CDATA[misc]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Misc]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>20</wp:term_id>
		<wp:category_nicename><![CDATA[music]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Music]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>21</wp:term_id>
		<wp:category_nicename><![CDATA[none]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[None]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>22</wp:term_id>
		<wp:category_nicename><![CDATA[personal-mixes]]></wp:category_nicename>
		<wp:category_parent><![CDATA[audio]]></wp:category_parent>
		<wp:cat_name><![CDATA[Personal Mixes]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>25</wp:term_id>
		<wp:category_nicename><![CDATA[photos-personal]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Photos &amp; Personal]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>573</wp:term_id>
		<wp:category_nicename><![CDATA[portfolio]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Portfolio]]></wp:cat_name>
<wp:category_description><![CDATA[My portfolio]]></wp:category_description>
	</wp:category>
	<wp:category>
		<wp:term_id>29</wp:term_id>
		<wp:category_nicename><![CDATA[programming]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Programming]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>24</wp:term_id>
		<wp:category_nicename><![CDATA[myprojects]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Projects]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>407</wp:term_id>
		<wp:category_nicename><![CDATA[projects]]></wp:category_nicename>
		<wp:category_parent><![CDATA[portfolio]]></wp:category_parent>
		<wp:cat_name><![CDATA[Projects]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>30</wp:term_id>
		<wp:category_nicename><![CDATA[recursive]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Recursive]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>634</wp:term_id>
		<wp:category_nicename><![CDATA[should-i-drive]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Should I Drive]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>31</wp:term_id>
		<wp:category_nicename><![CDATA[singles]]></wp:category_nicename>
		<wp:category_parent><![CDATA[audio]]></wp:category_parent>
		<wp:cat_name><![CDATA[Singles]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>32</wp:term_id>
		<wp:category_nicename><![CDATA[speaking-2]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Speaking]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>33</wp:term_id>
		<wp:category_nicename><![CDATA[swft]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[SWFt]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>34</wp:term_id>
		<wp:category_nicename><![CDATA[taskbar-monitor]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Taskbar Monitor]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>35</wp:term_id>
		<wp:category_nicename><![CDATA[td-project]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[TD Project]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>36</wp:term_id>
		<wp:category_nicename><![CDATA[the-family-jewels]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[The Family Jewels]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>37</wp:term_id>
		<wp:category_nicename><![CDATA[travel]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Travel]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>675</wp:term_id>
		<wp:category_nicename><![CDATA[trello-chat]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Trello Chat]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>673</wp:term_id>
		<wp:category_nicename><![CDATA[trello-tasks]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Trello Tasks]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>669</wp:term_id>
		<wp:category_nicename><![CDATA[tuckr]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Tuckr]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>38</wp:term_id>
		<wp:category_nicename><![CDATA[typescript]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[TypeScript]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>1</wp:term_id>
		<wp:category_nicename><![CDATA[uncategorized]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>558</wp:term_id>
		<wp:category_nicename><![CDATA[unity]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[Unity]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>618</wp:term_id>
		<wp:category_nicename><![CDATA[unity-ash]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Unity-Ash]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>598</wp:term_id>
		<wp:category_nicename><![CDATA[unityasteroids]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[UnityAsteroids]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>40</wp:term_id>
		<wp:category_nicename><![CDATA[webgl]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[WebGL]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>41</wp:term_id>
		<wp:category_nicename><![CDATA[websites]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Websites]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>42</wp:term_id>
		<wp:category_nicename><![CDATA[xna]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[XNA]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>43</wp:term_id>
		<wp:category_nicename><![CDATA[2013-trip]]></wp:category_nicename>
		<wp:category_parent><![CDATA[travel]]></wp:category_parent>
		<wp:cat_name><![CDATA[2013 Trip]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>709</wp:term_id>
		<wp:category_nicename><![CDATA[2016-australia-tour]]></wp:category_nicename>
		<wp:category_parent><![CDATA[travel]]></wp:category_parent>
		<wp:cat_name><![CDATA[2017 Camping Australia]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>588</wp:term_id>
		<wp:category_nicename><![CDATA[48-hours-later]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[48 Hours Later]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>44</wp:term_id>
		<wp:category_nicename><![CDATA[a-cunning-plan]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[A Cunning Plan]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>716</wp:term_id>
		<wp:category_nicename><![CDATA[above-under]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Above Under]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>45</wp:term_id>
		<wp:category_nicename><![CDATA[actionscript]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[Actionscript]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>46</wp:term_id>
		<wp:category_nicename><![CDATA[air]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[AIR]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>47</wp:term_id>
		<wp:category_nicename><![CDATA[albums]]></wp:category_nicename>
		<wp:category_parent><![CDATA[audio]]></wp:category_parent>
		<wp:cat_name><![CDATA[Albums]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>596</wp:term_id>
		<wp:category_nicename><![CDATA[audiobook-organiser]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Audiobook Organiser]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>594</wp:term_id>
		<wp:category_nicename><![CDATA[blast-out]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Blast Out]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>111</wp:term_id>
		<wp:category_nicename><![CDATA[blastwave]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Blastwave]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>589</wp:term_id>
		<wp:category_nicename><![CDATA[blastwave-lost-at-sea]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Blastwave: Lost At Sea]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>48</wp:term_id>
		<wp:category_nicename><![CDATA[c]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[C#]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>49</wp:term_id>
		<wp:category_nicename><![CDATA[c-programming]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[C++]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>7</wp:term_id>
		<wp:category_nicename><![CDATA[chainreaction]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[ChainReaction]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>50</wp:term_id>
		<wp:category_nicename><![CDATA[chrome-crawler]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Chrome Crawler]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>595</wp:term_id>
		<wp:category_nicename><![CDATA[codedrop]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[CodeDrop]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>687</wp:term_id>
		<wp:category_nicename><![CDATA[colourful-past]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Colourful Past]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>590</wp:term_id>
		<wp:category_nicename><![CDATA[countdown-with-neil-haversham]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Countdown with Neil Haversham]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>679</wp:term_id>
		<wp:category_nicename><![CDATA[credit-redeemer]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Credit Redeemer]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>51</wp:term_id>
		<wp:category_nicename><![CDATA[darkbasic]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[DarkBASIC]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>52</wp:term_id>
		<wp:category_nicename><![CDATA[directx9c]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[DirectX9c]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>53</wp:term_id>
		<wp:category_nicename><![CDATA[ectoplasm]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Ectoplasm]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>668</wp:term_id>
		<wp:category_nicename><![CDATA[entitiasteroids]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Entitiasteroids]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>592</wp:term_id>
		<wp:category_nicename><![CDATA[flashteroids]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Flashteroids]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>54</wp:term_id>
		<wp:category_nicename><![CDATA[flex]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[Flex]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>574</wp:term_id>
		<wp:category_nicename><![CDATA[games-portfolio]]></wp:category_nicename>
		<wp:category_parent><![CDATA[portfolio]]></wp:category_parent>
		<wp:cat_name><![CDATA[Games]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>706</wp:term_id>
		<wp:category_nicename><![CDATA[glancer]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Glancer]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>55</wp:term_id>
		<wp:category_nicename><![CDATA[glsl]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[GLSL]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>56</wp:term_id>
		<wp:category_nicename><![CDATA[haxe]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[HaXe]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>57</wp:term_id>
		<wp:category_nicename><![CDATA[hlsl]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[HLSL]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>58</wp:term_id>
		<wp:category_nicename><![CDATA[html]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[HTML]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>59</wp:term_id>
		<wp:category_nicename><![CDATA[html5]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[HTML5]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>60</wp:term_id>
		<wp:category_nicename><![CDATA[hxaria]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Hxaria]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>593</wp:term_id>
		<wp:category_nicename><![CDATA[icy-slicy]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Icy Slicy]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>15</wp:term_id>
		<wp:category_nicename><![CDATA[inputtie]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Inputtie]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>61</wp:term_id>
		<wp:category_nicename><![CDATA[j2me]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[J2ME]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>62</wp:term_id>
		<wp:category_nicename><![CDATA[java]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[Java]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>63</wp:term_id>
		<wp:category_nicename><![CDATA[javafx]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[JavaFX]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>64</wp:term_id>
		<wp:category_nicename><![CDATA[javascript]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[Javascript]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>65</wp:term_id>
		<wp:category_nicename><![CDATA[latesha]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Latesha]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>17</wp:term_id>
		<wp:category_nicename><![CDATA[lieroxna]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[LieroXNA]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>691</wp:term_id>
		<wp:category_nicename><![CDATA[markd]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Markd]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>610</wp:term_id>
		<wp:category_nicename><![CDATA[mk-bridges]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[MK Bridges]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>591</wp:term_id>
		<wp:category_nicename><![CDATA[monkey-mikes]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Monkey Mines]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>577</wp:term_id>
		<wp:category_nicename><![CDATA[mr-nibbles-myprojects]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Mr Nibbles]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>597</wp:term_id>
		<wp:category_nicename><![CDATA[mr-nibbles-3d]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Mr Nibbles 3D]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>620</wp:term_id>
		<wp:category_nicename><![CDATA[mr-nibbles-forever]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Mr Nibbles Forever]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>66</wp:term_id>
		<wp:category_nicename><![CDATA[mxml]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[MXML]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>67</wp:term_id>
		<wp:category_nicename><![CDATA[mysql]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[mySQL]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>685</wp:term_id>
		<wp:category_nicename><![CDATA[new-tab-chrome-experiments]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[New Tab Chrome Experiments]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>68</wp:term_id>
		<wp:category_nicename><![CDATA[php]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[PHP]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>613</wp:term_id>
		<wp:category_nicename><![CDATA[polymer]]></wp:category_nicename>
		<wp:category_parent><![CDATA[programming]]></wp:category_parent>
		<wp:cat_name><![CDATA[Polymer]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>26</wp:term_id>
		<wp:category_nicename><![CDATA[post-to-tumbr]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Post To Tumbr]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>27</wp:term_id>
		<wp:category_nicename><![CDATA[printomi]]></wp:category_nicename>
		<wp:category_parent><![CDATA[myprojects]]></wp:category_parent>
		<wp:cat_name><![CDATA[Printomi]]></wp:cat_name>
	</wp:category>
	<wp:tag>
		<wp:term_id>69</wp:term_id>
		<wp:tag_slug><![CDATA[mt_keywords]]></wp:tag_slug>
		<wp:tag_name><![CDATA[!$mt_keywords$!]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>611</wp:term_id>
		<wp:tag_slug><![CDATA[net]]></wp:tag_slug>
		<wp:tag_name><![CDATA[.NET]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>70</wp:term_id>
		<wp:tag_slug><![CDATA[11]]></wp:tag_slug>
		<wp:tag_name><![CDATA[1&amp;1]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>71</wp:term_id>
		<wp:tag_slug><![CDATA[24hour]]></wp:tag_slug>
		<wp:tag_name><![CDATA[24hour]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>72</wp:term_id>
		<wp:tag_slug><![CDATA[2d]]></wp:tag_slug>
		<wp:tag_name><![CDATA[2d]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>625</wp:term_id>
		<wp:tag_slug><![CDATA[2d-game]]></wp:tag_slug>
		<wp:tag_name><![CDATA[2d game]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>73</wp:term_id>
		<wp:tag_slug><![CDATA[3d]]></wp:tag_slug>
		<wp:tag_name><![CDATA[3d]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>74</wp:term_id>
		<wp:tag_slug><![CDATA[48hours]]></wp:tag_slug>
		<wp:tag_name><![CDATA[48hours]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>75</wp:term_id>
		<wp:tag_slug><![CDATA[8hourgame]]></wp:tag_slug>
		<wp:tag_name><![CDATA[8HourGame]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>76</wp:term_id>
		<wp:tag_slug><![CDATA[ableton]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ableton]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>717</wp:term_id>
		<wp:tag_slug><![CDATA[above-under]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Above Under]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>77</wp:term_id>
		<wp:tag_slug><![CDATA[acquisition]]></wp:tag_slug>
		<wp:tag_name><![CDATA[acquisition]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>653</wp:term_id>
		<wp:tag_slug><![CDATA[actionscript]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Actionscript]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>78</wp:term_id>
		<wp:tag_slug><![CDATA[adobe]]></wp:tag_slug>
		<wp:tag_name><![CDATA[adobe]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>79</wp:term_id>
		<wp:tag_slug><![CDATA[adventure]]></wp:tag_slug>
		<wp:tag_name><![CDATA[adventure]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>690</wp:term_id>
		<wp:tag_slug><![CDATA[ai]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ai]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>654</wp:term_id>
		<wp:tag_slug><![CDATA[air]]></wp:tag_slug>
		<wp:tag_name><![CDATA[AIR]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>666</wp:term_id>
		<wp:tag_slug><![CDATA[amazon]]></wp:tag_slug>
		<wp:tag_name><![CDATA[amazon]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>80</wp:term_id>
		<wp:tag_slug><![CDATA[america]]></wp:tag_slug>
		<wp:tag_name><![CDATA[America]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>81</wp:term_id>
		<wp:tag_slug><![CDATA[android]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Android]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>607</wp:term_id>
		<wp:tag_slug><![CDATA[animation]]></wp:tag_slug>
		<wp:tag_name><![CDATA[animation]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>82</wp:term_id>
		<wp:tag_slug><![CDATA[announce]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Announce]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>710</wp:term_id>
		<wp:tag_slug><![CDATA[annoying]]></wp:tag_slug>
		<wp:tag_name><![CDATA[annoying]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>83</wp:term_id>
		<wp:tag_slug><![CDATA[api]]></wp:tag_slug>
		<wp:tag_name><![CDATA[api]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>84</wp:term_id>
		<wp:tag_slug><![CDATA[app]]></wp:tag_slug>
		<wp:tag_name><![CDATA[app]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>85</wp:term_id>
		<wp:tag_slug><![CDATA[apple]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Apple]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>86</wp:term_id>
		<wp:tag_slug><![CDATA[apps]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Apps]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>667</wp:term_id>
		<wp:tag_slug><![CDATA[architecture]]></wp:tag_slug>
		<wp:tag_name><![CDATA[architecture]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>87</wp:term_id>
		<wp:tag_slug><![CDATA[argentina]]></wp:tag_slug>
		<wp:tag_name><![CDATA[argentina]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>88</wp:term_id>
		<wp:tag_slug><![CDATA[argon]]></wp:tag_slug>
		<wp:tag_name><![CDATA[argon]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>640</wp:term_id>
		<wp:tag_slug><![CDATA[art]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Art]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>89</wp:term_id>
		<wp:tag_slug><![CDATA[as3]]></wp:tag_slug>
		<wp:tag_name><![CDATA[as3]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>90</wp:term_id>
		<wp:tag_slug><![CDATA[as3hx]]></wp:tag_slug>
		<wp:tag_name><![CDATA[as3hx]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>91</wp:term_id>
		<wp:tag_slug><![CDATA[as3signals]]></wp:tag_slug>
		<wp:tag_name><![CDATA[as3signals]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>92</wp:term_id>
		<wp:tag_slug><![CDATA[ash]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ash]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>612</wp:term_id>
		<wp:tag_slug><![CDATA[asp]]></wp:tag_slug>
		<wp:tag_name><![CDATA[asp]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>93</wp:term_id>
		<wp:tag_slug><![CDATA[asp-net]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ASP.Net]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>94</wp:term_id>
		<wp:tag_slug><![CDATA[assembly]]></wp:tag_slug>
		<wp:tag_name><![CDATA[assembly]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>599</wp:term_id>
		<wp:tag_slug><![CDATA[asteroids]]></wp:tag_slug>
		<wp:tag_name><![CDATA[asteroids]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>665</wp:term_id>
		<wp:tag_slug><![CDATA[async]]></wp:tag_slug>
		<wp:tag_name><![CDATA[async]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>95</wp:term_id>
		<wp:tag_slug><![CDATA[ater]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ater]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>641</wp:term_id>
		<wp:tag_slug><![CDATA[audio]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Audio]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>96</wp:term_id>
		<wp:tag_slug><![CDATA[audiobook]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Audiobook]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>693</wp:term_id>
		<wp:tag_slug><![CDATA[aurelia]]></wp:tag_slug>
		<wp:tag_name><![CDATA[aurelia]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>556</wp:term_id>
		<wp:tag_slug><![CDATA[australia]]></wp:tag_slug>
		<wp:tag_name><![CDATA[australia]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>97</wp:term_id>
		<wp:tag_slug><![CDATA[auto-update]]></wp:tag_slug>
		<wp:tag_name><![CDATA[auto update]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>702</wp:term_id>
		<wp:tag_slug><![CDATA[autralia]]></wp:tag_slug>
		<wp:tag_name><![CDATA[autralia]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>98</wp:term_id>
		<wp:tag_slug><![CDATA[awake]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Awake]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>99</wp:term_id>
		<wp:tag_slug><![CDATA[awsome]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Awsome]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>100</wp:term_id>
		<wp:tag_slug><![CDATA[background]]></wp:tag_slug>
		<wp:tag_name><![CDATA[background]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>713</wp:term_id>
		<wp:tag_slug><![CDATA[ban]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ban]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>101</wp:term_id>
		<wp:tag_slug><![CDATA[bass]]></wp:tag_slug>
		<wp:tag_name><![CDATA[bass]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>102</wp:term_id>
		<wp:tag_slug><![CDATA[beach]]></wp:tag_slug>
		<wp:tag_name><![CDATA[beach]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>103</wp:term_id>
		<wp:tag_slug><![CDATA[beauty]]></wp:tag_slug>
		<wp:tag_name><![CDATA[beauty]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>104</wp:term_id>
		<wp:tag_slug><![CDATA[beer]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Beer]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>105</wp:term_id>
		<wp:tag_slug><![CDATA[behaviour]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Behaviour]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>723</wp:term_id>
		<wp:tag_slug><![CDATA[behphones]]></wp:tag_slug>
		<wp:tag_name><![CDATA[behphones]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>106</wp:term_id>
		<wp:tag_slug><![CDATA[belize]]></wp:tag_slug>
		<wp:tag_name><![CDATA[belize]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>107</wp:term_id>
		<wp:tag_slug><![CDATA[beta]]></wp:tag_slug>
		<wp:tag_name><![CDATA[beta]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>108</wp:term_id>
		<wp:tag_slug><![CDATA[bike]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Bike]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>109</wp:term_id>
		<wp:tag_slug><![CDATA[binding]]></wp:tag_slug>
		<wp:tag_name><![CDATA[binding]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>110</wp:term_id>
		<wp:tag_slug><![CDATA[birds]]></wp:tag_slug>
		<wp:tag_name><![CDATA[birds]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>661</wp:term_id>
		<wp:tag_slug><![CDATA[blastwave]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Blastwave]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>112</wp:term_id>
		<wp:tag_slug><![CDATA[blastwave-2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Blastwave 2]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>113</wp:term_id>
		<wp:tag_slug><![CDATA[blog]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Blog]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>114</wp:term_id>
		<wp:tag_slug><![CDATA[bloom]]></wp:tag_slug>
		<wp:tag_name><![CDATA[bloom]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>115</wp:term_id>
		<wp:tag_slug><![CDATA[bogota]]></wp:tag_slug>
		<wp:tag_name><![CDATA[bogota]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>116</wp:term_id>
		<wp:tag_slug><![CDATA[bolivia]]></wp:tag_slug>
		<wp:tag_name><![CDATA[bolivia]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>117</wp:term_id>
		<wp:tag_slug><![CDATA[book]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Book]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>118</wp:term_id>
		<wp:tag_slug><![CDATA[boomstick]]></wp:tag_slug>
		<wp:tag_name><![CDATA[boomstick]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>119</wp:term_id>
		<wp:tag_slug><![CDATA[bot]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Bot]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>120</wp:term_id>
		<wp:tag_slug><![CDATA[box2d]]></wp:tag_slug>
		<wp:tag_name><![CDATA[box2d]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>121</wp:term_id>
		<wp:tag_slug><![CDATA[brazil]]></wp:tag_slug>
		<wp:tag_name><![CDATA[brazil]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>122</wp:term_id>
		<wp:tag_slug><![CDATA[broadcast]]></wp:tag_slug>
		<wp:tag_name><![CDATA[broadcast]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>123</wp:term_id>
		<wp:tag_slug><![CDATA[browser]]></wp:tag_slug>
		<wp:tag_name><![CDATA[browser]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>124</wp:term_id>
		<wp:tag_slug><![CDATA[bucaramanga]]></wp:tag_slug>
		<wp:tag_name><![CDATA[bucaramanga]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>125</wp:term_id>
		<wp:tag_slug><![CDATA[buenos-aires]]></wp:tag_slug>
		<wp:tag_name><![CDATA[buenos aires]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>126</wp:term_id>
		<wp:tag_slug><![CDATA[bug]]></wp:tag_slug>
		<wp:tag_name><![CDATA[bug]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>639</wp:term_id>
		<wp:tag_slug><![CDATA[bug-fix]]></wp:tag_slug>
		<wp:tag_name><![CDATA[bug fix]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>127</wp:term_id>
		<wp:tag_slug><![CDATA[bungee]]></wp:tag_slug>
		<wp:tag_name><![CDATA[bungee]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>642</wp:term_id>
		<wp:tag_slug><![CDATA[business]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Business]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>128</wp:term_id>
		<wp:tag_slug><![CDATA[button]]></wp:tag_slug>
		<wp:tag_name><![CDATA[button]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>655</wp:term_id>
		<wp:tag_slug><![CDATA[c]]></wp:tag_slug>
		<wp:tag_name><![CDATA[C#]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>129</wp:term_id>
		<wp:tag_slug><![CDATA[california]]></wp:tag_slug>
		<wp:tag_name><![CDATA[California]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>130</wp:term_id>
		<wp:tag_slug><![CDATA[camera]]></wp:tag_slug>
		<wp:tag_name><![CDATA[camera]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>131</wp:term_id>
		<wp:tag_slug><![CDATA[campaign]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Campaign]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>132</wp:term_id>
		<wp:tag_slug><![CDATA[canvas]]></wp:tag_slug>
		<wp:tag_name><![CDATA[canvas]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>133</wp:term_id>
		<wp:tag_slug><![CDATA[canvas2d]]></wp:tag_slug>
		<wp:tag_name><![CDATA[canvas2d]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>134</wp:term_id>
		<wp:tag_slug><![CDATA[canyon]]></wp:tag_slug>
		<wp:tag_name><![CDATA[canyon]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>135</wp:term_id>
		<wp:tag_slug><![CDATA[caption]]></wp:tag_slug>
		<wp:tag_name><![CDATA[caption]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>136</wp:term_id>
		<wp:tag_slug><![CDATA[car]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Car]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>137</wp:term_id>
		<wp:tag_slug><![CDATA[cartagena]]></wp:tag_slug>
		<wp:tag_name><![CDATA[cartagena]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>138</wp:term_id>
		<wp:tag_slug><![CDATA[cashcard-fraud]]></wp:tag_slug>
		<wp:tag_name><![CDATA[cashcard fraud]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>139</wp:term_id>
		<wp:tag_slug><![CDATA[cats]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Cats]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>140</wp:term_id>
		<wp:tag_slug><![CDATA[challenge]]></wp:tag_slug>
		<wp:tag_name><![CDATA[challenge]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>141</wp:term_id>
		<wp:tag_slug><![CDATA[chat]]></wp:tag_slug>
		<wp:tag_name><![CDATA[chat]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>142</wp:term_id>
		<wp:tag_slug><![CDATA[chicago]]></wp:tag_slug>
		<wp:tag_name><![CDATA[chicago]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>143</wp:term_id>
		<wp:tag_slug><![CDATA[chill]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Chill]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>144</wp:term_id>
		<wp:tag_slug><![CDATA[chrome]]></wp:tag_slug>
		<wp:tag_name><![CDATA[chrome]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>145</wp:term_id>
		<wp:tag_slug><![CDATA[chrome-crawler-2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[chrome crawler]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>674</wp:term_id>
		<wp:tag_slug><![CDATA[chrome-extension]]></wp:tag_slug>
		<wp:tag_name><![CDATA[chrome extension]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>146</wp:term_id>
		<wp:tag_slug><![CDATA[chromecrawler]]></wp:tag_slug>
		<wp:tag_name><![CDATA[chromecrawler]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>147</wp:term_id>
		<wp:tag_slug><![CDATA[class]]></wp:tag_slug>
		<wp:tag_name><![CDATA[class]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>148</wp:term_id>
		<wp:tag_slug><![CDATA[clever]]></wp:tag_slug>
		<wp:tag_name><![CDATA[clever]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>149</wp:term_id>
		<wp:tag_slug><![CDATA[click]]></wp:tag_slug>
		<wp:tag_name><![CDATA[click]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>150</wp:term_id>
		<wp:tag_slug><![CDATA[clipboard]]></wp:tag_slug>
		<wp:tag_name><![CDATA[clipboard]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>151</wp:term_id>
		<wp:tag_slug><![CDATA[cncd]]></wp:tag_slug>
		<wp:tag_name><![CDATA[cncd]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>152</wp:term_id>
		<wp:tag_slug><![CDATA[code]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Code]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>153</wp:term_id>
		<wp:tag_slug><![CDATA[code-assist]]></wp:tag_slug>
		<wp:tag_name><![CDATA[code assist]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>154</wp:term_id>
		<wp:tag_slug><![CDATA[coding]]></wp:tag_slug>
		<wp:tag_name><![CDATA[coding]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>155</wp:term_id>
		<wp:tag_slug><![CDATA[colombia]]></wp:tag_slug>
		<wp:tag_name><![CDATA[colombia]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>156</wp:term_id>
		<wp:tag_slug><![CDATA[comments]]></wp:tag_slug>
		<wp:tag_name><![CDATA[comments]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>692</wp:term_id>
		<wp:tag_slug><![CDATA[commercial-project]]></wp:tag_slug>
		<wp:tag_name><![CDATA[commercial project]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>157</wp:term_id>
		<wp:tag_slug><![CDATA[community]]></wp:tag_slug>
		<wp:tag_name><![CDATA[community]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>158</wp:term_id>
		<wp:tag_slug><![CDATA[company]]></wp:tag_slug>
		<wp:tag_name><![CDATA[company]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>159</wp:term_id>
		<wp:tag_slug><![CDATA[competition]]></wp:tag_slug>
		<wp:tag_name><![CDATA[competition]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>160</wp:term_id>
		<wp:tag_slug><![CDATA[compile]]></wp:tag_slug>
		<wp:tag_name><![CDATA[compile]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>161</wp:term_id>
		<wp:tag_slug><![CDATA[compiler]]></wp:tag_slug>
		<wp:tag_name><![CDATA[compiler]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>162</wp:term_id>
		<wp:tag_slug><![CDATA[complex]]></wp:tag_slug>
		<wp:tag_name><![CDATA[complex]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>163</wp:term_id>
		<wp:tag_slug><![CDATA[component]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Component]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>619</wp:term_id>
		<wp:tag_slug><![CDATA[components]]></wp:tag_slug>
		<wp:tag_name><![CDATA[components]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>164</wp:term_id>
		<wp:tag_slug><![CDATA[condor]]></wp:tag_slug>
		<wp:tag_name><![CDATA[condor]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>165</wp:term_id>
		<wp:tag_slug><![CDATA[conference]]></wp:tag_slug>
		<wp:tag_name><![CDATA[conference]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>166</wp:term_id>
		<wp:tag_slug><![CDATA[cool]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Cool]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>167</wp:term_id>
		<wp:tag_slug><![CDATA[copan]]></wp:tag_slug>
		<wp:tag_name><![CDATA[copan]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>168</wp:term_id>
		<wp:tag_slug><![CDATA[costa-rica]]></wp:tag_slug>
		<wp:tag_name><![CDATA[costa rica]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>169</wp:term_id>
		<wp:tag_slug><![CDATA[crash]]></wp:tag_slug>
		<wp:tag_name><![CDATA[crash]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>170</wp:term_id>
		<wp:tag_slug><![CDATA[crawl]]></wp:tag_slug>
		<wp:tag_name><![CDATA[crawl]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>171</wp:term_id>
		<wp:tag_slug><![CDATA[crawler]]></wp:tag_slug>
		<wp:tag_name><![CDATA[crawler]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>172</wp:term_id>
		<wp:tag_slug><![CDATA[cs5]]></wp:tag_slug>
		<wp:tag_name><![CDATA[CS5]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>615</wp:term_id>
		<wp:tag_slug><![CDATA[css]]></wp:tag_slug>
		<wp:tag_name><![CDATA[css]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>173</wp:term_id>
		<wp:tag_slug><![CDATA[cusco]]></wp:tag_slug>
		<wp:tag_name><![CDATA[cusco]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>174</wp:term_id>
		<wp:tag_slug><![CDATA[custom]]></wp:tag_slug>
		<wp:tag_name><![CDATA[custom]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>175</wp:term_id>
		<wp:tag_slug><![CDATA[dare]]></wp:tag_slug>
		<wp:tag_name><![CDATA[dare]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>176</wp:term_id>
		<wp:tag_slug><![CDATA[dark]]></wp:tag_slug>
		<wp:tag_name><![CDATA[dark]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>688</wp:term_id>
		<wp:tag_slug><![CDATA[data]]></wp:tag_slug>
		<wp:tag_name><![CDATA[data]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>177</wp:term_id>
		<wp:tag_slug><![CDATA[death-road]]></wp:tag_slug>
		<wp:tag_name><![CDATA[death road]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>178</wp:term_id>
		<wp:tag_slug><![CDATA[debrief]]></wp:tag_slug>
		<wp:tag_name><![CDATA[debrief]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>179</wp:term_id>
		<wp:tag_slug><![CDATA[defcon]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Defcon]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>180</wp:term_id>
		<wp:tag_slug><![CDATA[demo]]></wp:tag_slug>
		<wp:tag_name><![CDATA[demo]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>181</wp:term_id>
		<wp:tag_slug><![CDATA[demoscene]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Demoscene]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>182</wp:term_id>
		<wp:tag_slug><![CDATA[dependency-injection]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Dependency Injection]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>183</wp:term_id>
		<wp:tag_slug><![CDATA[design]]></wp:tag_slug>
		<wp:tag_name><![CDATA[design]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>184</wp:term_id>
		<wp:tag_slug><![CDATA[desktop]]></wp:tag_slug>
		<wp:tag_name><![CDATA[desktop]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>185</wp:term_id>
		<wp:tag_slug><![CDATA[develop]]></wp:tag_slug>
		<wp:tag_name><![CDATA[develop]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>186</wp:term_id>
		<wp:tag_slug><![CDATA[development]]></wp:tag_slug>
		<wp:tag_name><![CDATA[development]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>187</wp:term_id>
		<wp:tag_slug><![CDATA[diary]]></wp:tag_slug>
		<wp:tag_name><![CDATA[diary]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>188</wp:term_id>
		<wp:tag_slug><![CDATA[dictionary]]></wp:tag_slug>
		<wp:tag_name><![CDATA[dictionary]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>189</wp:term_id>
		<wp:tag_slug><![CDATA[disk-space]]></wp:tag_slug>
		<wp:tag_name><![CDATA[disk space]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>190</wp:term_id>
		<wp:tag_slug><![CDATA[disqus]]></wp:tag_slug>
		<wp:tag_name><![CDATA[disqus]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>191</wp:term_id>
		<wp:tag_slug><![CDATA[dnb]]></wp:tag_slug>
		<wp:tag_name><![CDATA[dnb]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>192</wp:term_id>
		<wp:tag_slug><![CDATA[dolphns]]></wp:tag_slug>
		<wp:tag_name><![CDATA[dolphns]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>193</wp:term_id>
		<wp:tag_slug><![CDATA[donate]]></wp:tag_slug>
		<wp:tag_name><![CDATA[donate]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>194</wp:term_id>
		<wp:tag_slug><![CDATA[download]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Download]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>195</wp:term_id>
		<wp:tag_slug><![CDATA[downtemo]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Downtemo]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>196</wp:term_id>
		<wp:tag_slug><![CDATA[downtempo]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Downtempo]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>197</wp:term_id>
		<wp:tag_slug><![CDATA[drag-drop]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Drag-Drop]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>198</wp:term_id>
		<wp:tag_slug><![CDATA[draw]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Draw]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>199</wp:term_id>
		<wp:tag_slug><![CDATA[drawing]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Drawing]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>200</wp:term_id>
		<wp:tag_slug><![CDATA[dreams]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Dreams]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>718</wp:term_id>
		<wp:tag_slug><![CDATA[drone]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Drone]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>201</wp:term_id>
		<wp:tag_slug><![CDATA[dropbox]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Dropbox]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>202</wp:term_id>
		<wp:tag_slug><![CDATA[dubstep]]></wp:tag_slug>
		<wp:tag_name><![CDATA[dubstep]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>203</wp:term_id>
		<wp:tag_slug><![CDATA[ecuador]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ecuador]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>570</wp:term_id>
		<wp:tag_slug><![CDATA[editor]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Editor]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>704</wp:term_id>
		<wp:tag_slug><![CDATA[education]]></wp:tag_slug>
		<wp:tag_name><![CDATA[education]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>204</wp:term_id>
		<wp:tag_slug><![CDATA[electro]]></wp:tag_slug>
		<wp:tag_name><![CDATA[electro]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>205</wp:term_id>
		<wp:tag_slug><![CDATA[email]]></wp:tag_slug>
		<wp:tag_name><![CDATA[email]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>557</wp:term_id>
		<wp:tag_slug><![CDATA[emigrate]]></wp:tag_slug>
		<wp:tag_name><![CDATA[emigrate]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>206</wp:term_id>
		<wp:tag_slug><![CDATA[emotional]]></wp:tag_slug>
		<wp:tag_name><![CDATA[emotional]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>207</wp:term_id>
		<wp:tag_slug><![CDATA[employment]]></wp:tag_slug>
		<wp:tag_name><![CDATA[employment]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>621</wp:term_id>
		<wp:tag_slug><![CDATA[endless-runner]]></wp:tag_slug>
		<wp:tag_name><![CDATA[endless runner]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>208</wp:term_id>
		<wp:tag_slug><![CDATA[engine]]></wp:tag_slug>
		<wp:tag_name><![CDATA[engine]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>209</wp:term_id>
		<wp:tag_slug><![CDATA[entity]]></wp:tag_slug>
		<wp:tag_name><![CDATA[entity]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>210</wp:term_id>
		<wp:tag_slug><![CDATA[epic]]></wp:tag_slug>
		<wp:tag_name><![CDATA[epic]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>211</wp:term_id>
		<wp:tag_slug><![CDATA[error]]></wp:tag_slug>
		<wp:tag_name><![CDATA[error]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>670</wp:term_id>
		<wp:tag_slug><![CDATA[event]]></wp:tag_slug>
		<wp:tag_name><![CDATA[event]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>627</wp:term_id>
		<wp:tag_slug><![CDATA[everyplay]]></wp:tag_slug>
		<wp:tag_name><![CDATA[everyplay]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>212</wp:term_id>
		<wp:tag_slug><![CDATA[excellent]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Excellent]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>213</wp:term_id>
		<wp:tag_slug><![CDATA[expected]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Expected]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>214</wp:term_id>
		<wp:tag_slug><![CDATA[experi]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Experi]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>215</wp:term_id>
		<wp:tag_slug><![CDATA[experiment]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Experiment]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>216</wp:term_id>
		<wp:tag_slug><![CDATA[extension]]></wp:tag_slug>
		<wp:tag_name><![CDATA[extension]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>563</wp:term_id>
		<wp:tag_slug><![CDATA[extensions]]></wp:tag_slug>
		<wp:tag_name><![CDATA[extensions]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>217</wp:term_id>
		<wp:tag_slug><![CDATA[eyestrain]]></wp:tag_slug>
		<wp:tag_name><![CDATA[eyestrain]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>218</wp:term_id>
		<wp:tag_slug><![CDATA[facebook]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Facebook]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>219</wp:term_id>
		<wp:tag_slug><![CDATA[fairlight]]></wp:tag_slug>
		<wp:tag_name><![CDATA[fairlight]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>220</wp:term_id>
		<wp:tag_slug><![CDATA[fast]]></wp:tag_slug>
		<wp:tag_name><![CDATA[fast]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>221</wp:term_id>
		<wp:tag_slug><![CDATA[feathers]]></wp:tag_slug>
		<wp:tag_name><![CDATA[feathers]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>222</wp:term_id>
		<wp:tag_slug><![CDATA[feature]]></wp:tag_slug>
		<wp:tag_name><![CDATA[feature]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>223</wp:term_id>
		<wp:tag_slug><![CDATA[files]]></wp:tag_slug>
		<wp:tag_name><![CDATA[files]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>224</wp:term_id>
		<wp:tag_slug><![CDATA[finished]]></wp:tag_slug>
		<wp:tag_name><![CDATA[finished]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>225</wp:term_id>
		<wp:tag_slug><![CDATA[fix]]></wp:tag_slug>
		<wp:tag_name><![CDATA[fix]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>643</wp:term_id>
		<wp:tag_slug><![CDATA[flash]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Flash]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>226</wp:term_id>
		<wp:tag_slug><![CDATA[flash-builder]]></wp:tag_slug>
		<wp:tag_name><![CDATA[flash builder]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>227</wp:term_id>
		<wp:tag_slug><![CDATA[flashdevelop]]></wp:tag_slug>
		<wp:tag_name><![CDATA[FlashDevelop]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>228</wp:term_id>
		<wp:tag_slug><![CDATA[flashpunk]]></wp:tag_slug>
		<wp:tag_name><![CDATA[FlashPunk]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>229</wp:term_id>
		<wp:tag_slug><![CDATA[flat]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Flat]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>656</wp:term_id>
		<wp:tag_slug><![CDATA[flex]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Flex]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>230</wp:term_id>
		<wp:tag_slug><![CDATA[flex4]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Flex4]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>231</wp:term_id>
		<wp:tag_slug><![CDATA[flixel]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Flixel]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>711</wp:term_id>
		<wp:tag_slug><![CDATA[forced]]></wp:tag_slug>
		<wp:tag_name><![CDATA[forced]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>232</wp:term_id>
		<wp:tag_slug><![CDATA[framework]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Framework]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>233</wp:term_id>
		<wp:tag_slug><![CDATA[framwork]]></wp:tag_slug>
		<wp:tag_name><![CDATA[framwork]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>234</wp:term_id>
		<wp:tag_slug><![CDATA[friends]]></wp:tag_slug>
		<wp:tag_name><![CDATA[friends]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>235</wp:term_id>
		<wp:tag_slug><![CDATA[from-dust]]></wp:tag_slug>
		<wp:tag_name><![CDATA[from dust]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>236</wp:term_id>
		<wp:tag_slug><![CDATA[fun]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Fun]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>237</wp:term_id>
		<wp:tag_slug><![CDATA[functional]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Functional]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>238</wp:term_id>
		<wp:tag_slug><![CDATA[funk]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Funk]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>239</wp:term_id>
		<wp:tag_slug><![CDATA[game]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Game]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>240</wp:term_id>
		<wp:tag_slug><![CDATA[gamejam]]></wp:tag_slug>
		<wp:tag_name><![CDATA[gamejam]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>241</wp:term_id>
		<wp:tag_slug><![CDATA[gameplay]]></wp:tag_slug>
		<wp:tag_name><![CDATA[gameplay]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>644</wp:term_id>
		<wp:tag_slug><![CDATA[games]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Games]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>242</wp:term_id>
		<wp:tag_slug><![CDATA[gaming]]></wp:tag_slug>
		<wp:tag_name><![CDATA[gaming]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>243</wp:term_id>
		<wp:tag_slug><![CDATA[gardens]]></wp:tag_slug>
		<wp:tag_name><![CDATA[gardens]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>244</wp:term_id>
		<wp:tag_slug><![CDATA[gem]]></wp:tag_slug>
		<wp:tag_name><![CDATA[gem]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>566</wp:term_id>
		<wp:tag_slug><![CDATA[github]]></wp:tag_slug>
		<wp:tag_name><![CDATA[github]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>245</wp:term_id>
		<wp:tag_slug><![CDATA[glitch]]></wp:tag_slug>
		<wp:tag_name><![CDATA[glitch]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>246</wp:term_id>
		<wp:tag_slug><![CDATA[glsl-2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[glsl]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>247</wp:term_id>
		<wp:tag_slug><![CDATA[gmail]]></wp:tag_slug>
		<wp:tag_name><![CDATA[gmail]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>629</wp:term_id>
		<wp:tag_slug><![CDATA[goals]]></wp:tag_slug>
		<wp:tag_name><![CDATA[goals]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>248</wp:term_id>
		<wp:tag_slug><![CDATA[god-game]]></wp:tag_slug>
		<wp:tag_name><![CDATA[god game]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>249</wp:term_id>
		<wp:tag_slug><![CDATA[google]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Google]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>250</wp:term_id>
		<wp:tag_slug><![CDATA[gotcha]]></wp:tag_slug>
		<wp:tag_name><![CDATA[gotcha]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>251</wp:term_id>
		<wp:tag_slug><![CDATA[gourmet-ranch]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Gourmet Ranch]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>635</wp:term_id>
		<wp:tag_slug><![CDATA[govhack]]></wp:tag_slug>
		<wp:tag_name><![CDATA[govhack]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>252</wp:term_id>
		<wp:tag_slug><![CDATA[gpu]]></wp:tag_slug>
		<wp:tag_name><![CDATA[gpu]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>253</wp:term_id>
		<wp:tag_slug><![CDATA[graph]]></wp:tag_slug>
		<wp:tag_name><![CDATA[graph]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>254</wp:term_id>
		<wp:tag_slug><![CDATA[group]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Group]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>255</wp:term_id>
		<wp:tag_slug><![CDATA[gsm]]></wp:tag_slug>
		<wp:tag_name><![CDATA[GSM]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>256</wp:term_id>
		<wp:tag_slug><![CDATA[guatamala]]></wp:tag_slug>
		<wp:tag_name><![CDATA[guatamala]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>257</wp:term_id>
		<wp:tag_slug><![CDATA[guayaquil]]></wp:tag_slug>
		<wp:tag_name><![CDATA[guayaquil]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>258</wp:term_id>
		<wp:tag_slug><![CDATA[hack]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Hack]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>638</wp:term_id>
		<wp:tag_slug><![CDATA[hackathon]]></wp:tag_slug>
		<wp:tag_name><![CDATA[hackathon]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>259</wp:term_id>
		<wp:tag_slug><![CDATA[hamster]]></wp:tag_slug>
		<wp:tag_name><![CDATA[hamster]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>260</wp:term_id>
		<wp:tag_slug><![CDATA[handy]]></wp:tag_slug>
		<wp:tag_name><![CDATA[handy]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>261</wp:term_id>
		<wp:tag_slug><![CDATA[hardware]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Hardware]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>262</wp:term_id>
		<wp:tag_slug><![CDATA[harmony]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Harmony]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>263</wp:term_id>
		<wp:tag_slug><![CDATA[haxe-2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[haxe]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>722</wp:term_id>
		<wp:tag_slug><![CDATA[headphones]]></wp:tag_slug>
		<wp:tag_name><![CDATA[headphones]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>264</wp:term_id>
		<wp:tag_slug><![CDATA[heels]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Heels]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>617</wp:term_id>
		<wp:tag_slug><![CDATA[helpers]]></wp:tag_slug>
		<wp:tag_name><![CDATA[helpers]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>628</wp:term_id>
		<wp:tag_slug><![CDATA[highscores]]></wp:tag_slug>
		<wp:tag_name><![CDATA[highscores]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>265</wp:term_id>
		<wp:tag_slug><![CDATA[hike]]></wp:tag_slug>
		<wp:tag_name><![CDATA[hike]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>266</wp:term_id>
		<wp:tag_slug><![CDATA[history]]></wp:tag_slug>
		<wp:tag_name><![CDATA[history]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>267</wp:term_id>
		<wp:tag_slug><![CDATA[hlsl-2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[hlsl]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>268</wp:term_id>
		<wp:tag_slug><![CDATA[holiday]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Holiday]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>269</wp:term_id>
		<wp:tag_slug><![CDATA[hondorus]]></wp:tag_slug>
		<wp:tag_name><![CDATA[hondorus]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>270</wp:term_id>
		<wp:tag_slug><![CDATA[hosting]]></wp:tag_slug>
		<wp:tag_name><![CDATA[hosting]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>271</wp:term_id>
		<wp:tag_slug><![CDATA[house]]></wp:tag_slug>
		<wp:tag_name><![CDATA[house]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>657</wp:term_id>
		<wp:tag_slug><![CDATA[html]]></wp:tag_slug>
		<wp:tag_name><![CDATA[HTML]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>658</wp:term_id>
		<wp:tag_slug><![CDATA[html5]]></wp:tag_slug>
		<wp:tag_name><![CDATA[HTML5]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>272</wp:term_id>
		<wp:tag_slug><![CDATA[huaraz]]></wp:tag_slug>
		<wp:tag_name><![CDATA[huaraz]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>273</wp:term_id>
		<wp:tag_slug><![CDATA[icon]]></wp:tag_slug>
		<wp:tag_name><![CDATA[icon]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>274</wp:term_id>
		<wp:tag_slug><![CDATA[ide]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ide]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>275</wp:term_id>
		<wp:tag_slug><![CDATA[idea]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Idea]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>276</wp:term_id>
		<wp:tag_slug><![CDATA[im]]></wp:tag_slug>
		<wp:tag_name><![CDATA[im]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>608</wp:term_id>
		<wp:tag_slug><![CDATA[image]]></wp:tag_slug>
		<wp:tag_name><![CDATA[image]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>277</wp:term_id>
		<wp:tag_slug><![CDATA[import]]></wp:tag_slug>
		<wp:tag_name><![CDATA[import]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>278</wp:term_id>
		<wp:tag_slug><![CDATA[impressive]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Impressive]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>279</wp:term_id>
		<wp:tag_slug><![CDATA[inca-trail]]></wp:tag_slug>
		<wp:tag_name><![CDATA[inca trail]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>623</wp:term_id>
		<wp:tag_slug><![CDATA[indie]]></wp:tag_slug>
		<wp:tag_name><![CDATA[indie]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>645</wp:term_id>
		<wp:tag_slug><![CDATA[inputtie]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Inputtie]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>280</wp:term_id>
		<wp:tag_slug><![CDATA[instagram]]></wp:tag_slug>
		<wp:tag_name><![CDATA[instagram]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>281</wp:term_id>
		<wp:tag_slug><![CDATA[instagrid]]></wp:tag_slug>
		<wp:tag_name><![CDATA[instagrid]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>282</wp:term_id>
		<wp:tag_slug><![CDATA[intensedebate]]></wp:tag_slug>
		<wp:tag_name><![CDATA[intensedebate]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>283</wp:term_id>
		<wp:tag_slug><![CDATA[interesting]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Interesting]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>682</wp:term_id>
		<wp:tag_slug><![CDATA[interview]]></wp:tag_slug>
		<wp:tag_name><![CDATA[interview]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>284</wp:term_id>
		<wp:tag_slug><![CDATA[ioc]]></wp:tag_slug>
		<wp:tag_name><![CDATA[IoC]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>285</wp:term_id>
		<wp:tag_slug><![CDATA[ios]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ios]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>646</wp:term_id>
		<wp:tag_slug><![CDATA[iphone]]></wp:tag_slug>
		<wp:tag_name><![CDATA[iPhone]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>286</wp:term_id>
		<wp:tag_slug><![CDATA[island]]></wp:tag_slug>
		<wp:tag_name><![CDATA[island]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>287</wp:term_id>
		<wp:tag_slug><![CDATA[itunes]]></wp:tag_slug>
		<wp:tag_name><![CDATA[iTunes]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>288</wp:term_id>
		<wp:tag_slug><![CDATA[jailbreak]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Jailbreak]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>289</wp:term_id>
		<wp:tag_slug><![CDATA[java-2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[java]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>290</wp:term_id>
		<wp:tag_slug><![CDATA[java-fx]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Java FX]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>659</wp:term_id>
		<wp:tag_slug><![CDATA[javascript]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Javascript]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>291</wp:term_id>
		<wp:tag_slug><![CDATA[jgroup]]></wp:tag_slug>
		<wp:tag_name><![CDATA[jgroup]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>292</wp:term_id>
		<wp:tag_slug><![CDATA[jmdns]]></wp:tag_slug>
		<wp:tag_name><![CDATA[jmdns]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>293</wp:term_id>
		<wp:tag_slug><![CDATA[joa]]></wp:tag_slug>
		<wp:tag_name><![CDATA[joa]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>294</wp:term_id>
		<wp:tag_slug><![CDATA[jobs]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Jobs]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>295</wp:term_id>
		<wp:tag_slug><![CDATA[jquery]]></wp:tag_slug>
		<wp:tag_name><![CDATA[jquery]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>296</wp:term_id>
		<wp:tag_slug><![CDATA[js]]></wp:tag_slug>
		<wp:tag_name><![CDATA[js]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>297</wp:term_id>
		<wp:tag_slug><![CDATA[json]]></wp:tag_slug>
		<wp:tag_name><![CDATA[json]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>298</wp:term_id>
		<wp:tag_slug><![CDATA[judge]]></wp:tag_slug>
		<wp:tag_name><![CDATA[judge]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>703</wp:term_id>
		<wp:tag_slug><![CDATA[juge]]></wp:tag_slug>
		<wp:tag_name><![CDATA[juge]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>299</wp:term_id>
		<wp:tag_slug><![CDATA[keyboard]]></wp:tag_slug>
		<wp:tag_name><![CDATA[keyboard]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>300</wp:term_id>
		<wp:tag_slug><![CDATA[kite]]></wp:tag_slug>
		<wp:tag_name><![CDATA[kite]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>301</wp:term_id>
		<wp:tag_slug><![CDATA[kite-surfing]]></wp:tag_slug>
		<wp:tag_name><![CDATA[kite surfing]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>302</wp:term_id>
		<wp:tag_slug><![CDATA[l-system]]></wp:tag_slug>
		<wp:tag_name><![CDATA[l-system]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>303</wp:term_id>
		<wp:tag_slug><![CDATA[lab]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Lab]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>304</wp:term_id>
		<wp:tag_slug><![CDATA[label]]></wp:tag_slug>
		<wp:tag_name><![CDATA[label]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>305</wp:term_id>
		<wp:tag_slug><![CDATA[lan]]></wp:tag_slug>
		<wp:tag_name><![CDATA[lan]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>306</wp:term_id>
		<wp:tag_slug><![CDATA[language]]></wp:tag_slug>
		<wp:tag_name><![CDATA[language]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>307</wp:term_id>
		<wp:tag_slug><![CDATA[languages]]></wp:tag_slug>
		<wp:tag_name><![CDATA[languages]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>308</wp:term_id>
		<wp:tag_slug><![CDATA[latesha-2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[latesha]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>309</wp:term_id>
		<wp:tag_slug><![CDATA[launch]]></wp:tag_slug>
		<wp:tag_name><![CDATA[launch]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>310</wp:term_id>
		<wp:tag_slug><![CDATA[leaving]]></wp:tag_slug>
		<wp:tag_name><![CDATA[leaving]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>311</wp:term_id>
		<wp:tag_slug><![CDATA[leiro]]></wp:tag_slug>
		<wp:tag_name><![CDATA[leiro]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>312</wp:term_id>
		<wp:tag_slug><![CDATA[levelup]]></wp:tag_slug>
		<wp:tag_name><![CDATA[levelup]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>313</wp:term_id>
		<wp:tag_slug><![CDATA[library]]></wp:tag_slug>
		<wp:tag_name><![CDATA[library]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>314</wp:term_id>
		<wp:tag_slug><![CDATA[liero]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Liero]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>555</wp:term_id>
		<wp:tag_slug><![CDATA[life]]></wp:tag_slug>
		<wp:tag_name><![CDATA[life]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>315</wp:term_id>
		<wp:tag_slug><![CDATA[linux]]></wp:tag_slug>
		<wp:tag_name><![CDATA[linux]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>316</wp:term_id>
		<wp:tag_slug><![CDATA[liquid]]></wp:tag_slug>
		<wp:tag_name><![CDATA[liquid]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>317</wp:term_id>
		<wp:tag_slug><![CDATA[lucid]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Lucid]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>318</wp:term_id>
		<wp:tag_slug><![CDATA[ludum]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ludum]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>319</wp:term_id>
		<wp:tag_slug><![CDATA[mac]]></wp:tag_slug>
		<wp:tag_name><![CDATA[mac]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>320</wp:term_id>
		<wp:tag_slug><![CDATA[macchu-picchu]]></wp:tag_slug>
		<wp:tag_name><![CDATA[macchu picchu]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>689</wp:term_id>
		<wp:tag_slug><![CDATA[machine-learning]]></wp:tag_slug>
		<wp:tag_name><![CDATA[machine learning]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>321</wp:term_id>
		<wp:tag_slug><![CDATA[madness]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Madness]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>322</wp:term_id>
		<wp:tag_slug><![CDATA[malaysia]]></wp:tag_slug>
		<wp:tag_name><![CDATA[malaysia]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>605</wp:term_id>
		<wp:tag_slug><![CDATA[management]]></wp:tag_slug>
		<wp:tag_name><![CDATA[management]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>323</wp:term_id>
		<wp:tag_slug><![CDATA[manchester]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Manchester]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>324</wp:term_id>
		<wp:tag_slug><![CDATA[mancora]]></wp:tag_slug>
		<wp:tag_name><![CDATA[mancora]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>325</wp:term_id>
		<wp:tag_slug><![CDATA[maps]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Maps]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>326</wp:term_id>
		<wp:tag_slug><![CDATA[marketing]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Marketing]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>327</wp:term_id>
		<wp:tag_slug><![CDATA[match-three]]></wp:tag_slug>
		<wp:tag_name><![CDATA[match three]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>328</wp:term_id>
		<wp:tag_slug><![CDATA[mate]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Mate]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>329</wp:term_id>
		<wp:tag_slug><![CDATA[medellin]]></wp:tag_slug>
		<wp:tag_name><![CDATA[medellin]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>684</wp:term_id>
		<wp:tag_slug><![CDATA[media]]></wp:tag_slug>
		<wp:tag_name><![CDATA[media]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>330</wp:term_id>
		<wp:tag_slug><![CDATA[melodic]]></wp:tag_slug>
		<wp:tag_name><![CDATA[melodic]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>331</wp:term_id>
		<wp:tag_slug><![CDATA[mexico]]></wp:tag_slug>
		<wp:tag_name><![CDATA[mexico]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>332</wp:term_id>
		<wp:tag_slug><![CDATA[microphone]]></wp:tag_slug>
		<wp:tag_name><![CDATA[microphone]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>333</wp:term_id>
		<wp:tag_slug><![CDATA[microsoft]]></wp:tag_slug>
		<wp:tag_name><![CDATA[microsoft]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>334</wp:term_id>
		<wp:tag_slug><![CDATA[middle]]></wp:tag_slug>
		<wp:tag_name><![CDATA[middle]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>335</wp:term_id>
		<wp:tag_slug><![CDATA[mind]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Mind]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>336</wp:term_id>
		<wp:tag_slug><![CDATA[mix]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Mix]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>337</wp:term_id>
		<wp:tag_slug><![CDATA[mixes]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Mixes]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>338</wp:term_id>
		<wp:tag_slug><![CDATA[mobile]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Mobile]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>602</wp:term_id>
		<wp:tag_slug><![CDATA[moblie]]></wp:tag_slug>
		<wp:tag_name><![CDATA[moblie]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>663</wp:term_id>
		<wp:tag_slug><![CDATA[mockolate]]></wp:tag_slug>
		<wp:tag_name><![CDATA[mockolate]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>604</wp:term_id>
		<wp:tag_slug><![CDATA[models]]></wp:tag_slug>
		<wp:tag_name><![CDATA[models]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>339</wp:term_id>
		<wp:tag_slug><![CDATA[monitor]]></wp:tag_slug>
		<wp:tag_name><![CDATA[monitor]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>340</wp:term_id>
		<wp:tag_slug><![CDATA[monocle]]></wp:tag_slug>
		<wp:tag_name><![CDATA[monocle]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>341</wp:term_id>
		<wp:tag_slug><![CDATA[montanita]]></wp:tag_slug>
		<wp:tag_name><![CDATA[montanita]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>342</wp:term_id>
		<wp:tag_slug><![CDATA[mountain-bike]]></wp:tag_slug>
		<wp:tag_name><![CDATA[mountain bike]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>343</wp:term_id>
		<wp:tag_slug><![CDATA[mouse]]></wp:tag_slug>
		<wp:tag_name><![CDATA[mouse]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>344</wp:term_id>
		<wp:tag_slug><![CDATA[move]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Move]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>345</wp:term_id>
		<wp:tag_slug><![CDATA[movies]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Movies]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>346</wp:term_id>
		<wp:tag_slug><![CDATA[mp3]]></wp:tag_slug>
		<wp:tag_name><![CDATA[MP3]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>347</wp:term_id>
		<wp:tag_slug><![CDATA[mr-nibbles]]></wp:tag_slug>
		<wp:tag_name><![CDATA[mr nibbles]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>624</wp:term_id>
		<wp:tag_slug><![CDATA[mr-nibbles-forever]]></wp:tag_slug>
		<wp:tag_name><![CDATA[mr nibbles forever]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>348</wp:term_id>
		<wp:tag_slug><![CDATA[msn]]></wp:tag_slug>
		<wp:tag_name><![CDATA[msn]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>647</wp:term_id>
		<wp:tag_slug><![CDATA[music]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Music]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>560</wp:term_id>
		<wp:tag_slug><![CDATA[mvc]]></wp:tag_slug>
		<wp:tag_name><![CDATA[MVC]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>660</wp:term_id>
		<wp:tag_slug><![CDATA[mxml]]></wp:tag_slug>
		<wp:tag_name><![CDATA[MXML]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>349</wp:term_id>
		<wp:tag_slug><![CDATA[mxmlc]]></wp:tag_slug>
		<wp:tag_name><![CDATA[mxmlc]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>350</wp:term_id>
		<wp:tag_slug><![CDATA[networking]]></wp:tag_slug>
		<wp:tag_name><![CDATA[networking]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>351</wp:term_id>
		<wp:tag_slug><![CDATA[new-years]]></wp:tag_slug>
		<wp:tag_name><![CDATA[new years]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>352</wp:term_id>
		<wp:tag_slug><![CDATA[new-york]]></wp:tag_slug>
		<wp:tag_name><![CDATA[new york]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>353</wp:term_id>
		<wp:tag_slug><![CDATA[news]]></wp:tag_slug>
		<wp:tag_name><![CDATA[News]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>354</wp:term_id>
		<wp:tag_slug><![CDATA[nhs]]></wp:tag_slug>
		<wp:tag_name><![CDATA[nhs]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>355</wp:term_id>
		<wp:tag_slug><![CDATA[nibbles]]></wp:tag_slug>
		<wp:tag_name><![CDATA[nibbles]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>356</wp:term_id>
		<wp:tag_slug><![CDATA[nme]]></wp:tag_slug>
		<wp:tag_name><![CDATA[nme]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>357</wp:term_id>
		<wp:tag_slug><![CDATA[node]]></wp:tag_slug>
		<wp:tag_name><![CDATA[node]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>358</wp:term_id>
		<wp:tag_slug><![CDATA[north]]></wp:tag_slug>
		<wp:tag_name><![CDATA[north]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>359</wp:term_id>
		<wp:tag_slug><![CDATA[north-carolina]]></wp:tag_slug>
		<wp:tag_name><![CDATA[north carolina]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>360</wp:term_id>
		<wp:tag_slug><![CDATA[notification]]></wp:tag_slug>
		<wp:tag_name><![CDATA[notification]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>361</wp:term_id>
		<wp:tag_slug><![CDATA[ometepe]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ometepe]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>568</wp:term_id>
		<wp:tag_slug><![CDATA[open-source]]></wp:tag_slug>
		<wp:tag_name><![CDATA[open-source]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>362</wp:term_id>
		<wp:tag_slug><![CDATA[opengl]]></wp:tag_slug>
		<wp:tag_name><![CDATA[opengl]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>363</wp:term_id>
		<wp:tag_slug><![CDATA[opensource]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Opensource]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>364</wp:term_id>
		<wp:tag_slug><![CDATA[opera]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Opera]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>365</wp:term_id>
		<wp:tag_slug><![CDATA[opinion]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Opinion]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>366</wp:term_id>
		<wp:tag_slug><![CDATA[options]]></wp:tag_slug>
		<wp:tag_name><![CDATA[options]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>367</wp:term_id>
		<wp:tag_slug><![CDATA[os]]></wp:tag_slug>
		<wp:tag_name><![CDATA[OS]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>368</wp:term_id>
		<wp:tag_slug><![CDATA[palenque]]></wp:tag_slug>
		<wp:tag_name><![CDATA[palenque]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>369</wp:term_id>
		<wp:tag_slug><![CDATA[panama]]></wp:tag_slug>
		<wp:tag_name><![CDATA[panama]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>370</wp:term_id>
		<wp:tag_slug><![CDATA[panama-city]]></wp:tag_slug>
		<wp:tag_name><![CDATA[panama city]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>371</wp:term_id>
		<wp:tag_slug><![CDATA[paraglide]]></wp:tag_slug>
		<wp:tag_name><![CDATA[paraglide]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>372</wp:term_id>
		<wp:tag_slug><![CDATA[parse]]></wp:tag_slug>
		<wp:tag_name><![CDATA[parse]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>562</wp:term_id>
		<wp:tag_slug><![CDATA[parse-com]]></wp:tag_slug>
		<wp:tag_name><![CDATA[parse.com]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>373</wp:term_id>
		<wp:tag_slug><![CDATA[particles]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Particles]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>374</wp:term_id>
		<wp:tag_slug><![CDATA[party]]></wp:tag_slug>
		<wp:tag_name><![CDATA[party]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>375</wp:term_id>
		<wp:tag_slug><![CDATA[patch]]></wp:tag_slug>
		<wp:tag_name><![CDATA[patch]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>694</wp:term_id>
		<wp:tag_slug><![CDATA[payment]]></wp:tag_slug>
		<wp:tag_name><![CDATA[payment]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>695</wp:term_id>
		<wp:tag_slug><![CDATA[paypal]]></wp:tag_slug>
		<wp:tag_name><![CDATA[paypal]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>376</wp:term_id>
		<wp:tag_slug><![CDATA[pbe]]></wp:tag_slug>
		<wp:tag_name><![CDATA[pbe]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>377</wp:term_id>
		<wp:tag_slug><![CDATA[pc]]></wp:tag_slug>
		<wp:tag_name><![CDATA[pc]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>378</wp:term_id>
		<wp:tag_slug><![CDATA[performance]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Performance]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>379</wp:term_id>
		<wp:tag_slug><![CDATA[personal]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Personal]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>23</wp:term_id>
		<wp:tag_slug><![CDATA[personal-project]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Personal Projects]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>671</wp:term_id>
		<wp:tag_slug><![CDATA[perth]]></wp:tag_slug>
		<wp:tag_name><![CDATA[perth]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>380</wp:term_id>
		<wp:tag_slug><![CDATA[peru]]></wp:tag_slug>
		<wp:tag_name><![CDATA[peru]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>381</wp:term_id>
		<wp:tag_slug><![CDATA[peter-f-hamilton]]></wp:tag_slug>
		<wp:tag_name><![CDATA[peter f hamilton]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>382</wp:term_id>
		<wp:tag_slug><![CDATA[phot]]></wp:tag_slug>
		<wp:tag_name><![CDATA[phot]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>383</wp:term_id>
		<wp:tag_slug><![CDATA[photo]]></wp:tag_slug>
		<wp:tag_name><![CDATA[photo]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>719</wp:term_id>
		<wp:tag_slug><![CDATA[photography]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Photography]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>384</wp:term_id>
		<wp:tag_slug><![CDATA[photos]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Photos]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>385</wp:term_id>
		<wp:tag_slug><![CDATA[photose]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Photose]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>386</wp:term_id>
		<wp:tag_slug><![CDATA[physics]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Physics]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>387</wp:term_id>
		<wp:tag_slug><![CDATA[pixel]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Pixel]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>630</wp:term_id>
		<wp:tag_slug><![CDATA[plan]]></wp:tag_slug>
		<wp:tag_name><![CDATA[plan]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>388</wp:term_id>
		<wp:tag_slug><![CDATA[planning]]></wp:tag_slug>
		<wp:tag_name><![CDATA[planning]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>626</wp:term_id>
		<wp:tag_slug><![CDATA[platformer]]></wp:tag_slug>
		<wp:tag_name><![CDATA[platformer]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>389</wp:term_id>
		<wp:tag_slug><![CDATA[play]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Play]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>390</wp:term_id>
		<wp:tag_slug><![CDATA[playdemic]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Playdemic]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>391</wp:term_id>
		<wp:tag_slug><![CDATA[player]]></wp:tag_slug>
		<wp:tag_name><![CDATA[player]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>392</wp:term_id>
		<wp:tag_slug><![CDATA[plesk]]></wp:tag_slug>
		<wp:tag_name><![CDATA[plesk]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>393</wp:term_id>
		<wp:tag_slug><![CDATA[plugin]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Plugin]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>683</wp:term_id>
		<wp:tag_slug><![CDATA[podcast]]></wp:tag_slug>
		<wp:tag_name><![CDATA[podcast]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>614</wp:term_id>
		<wp:tag_slug><![CDATA[polymer-2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[polymer]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>678</wp:term_id>
		<wp:tag_slug><![CDATA[port]]></wp:tag_slug>
		<wp:tag_name><![CDATA[port]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>394</wp:term_id>
		<wp:tag_slug><![CDATA[post]]></wp:tag_slug>
		<wp:tag_name><![CDATA[post]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>395</wp:term_id>
		<wp:tag_slug><![CDATA[post-mortem]]></wp:tag_slug>
		<wp:tag_name><![CDATA[post mortem]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>609</wp:term_id>
		<wp:tag_slug><![CDATA[post-to-tumblr]]></wp:tag_slug>
		<wp:tag_name><![CDATA[post to tumblr]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>396</wp:term_id>
		<wp:tag_slug><![CDATA[posttotumblr]]></wp:tag_slug>
		<wp:tag_name><![CDATA[posttotumblr]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>397</wp:term_id>
		<wp:tag_slug><![CDATA[preformat]]></wp:tag_slug>
		<wp:tag_name><![CDATA[preformat]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>398</wp:term_id>
		<wp:tag_slug><![CDATA[pretty]]></wp:tag_slug>
		<wp:tag_name><![CDATA[pretty]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>399</wp:term_id>
		<wp:tag_slug><![CDATA[problems]]></wp:tag_slug>
		<wp:tag_name><![CDATA[problems]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>721</wp:term_id>
		<wp:tag_slug><![CDATA[product]]></wp:tag_slug>
		<wp:tag_name><![CDATA[product]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>400</wp:term_id>
		<wp:tag_slug><![CDATA[production]]></wp:tag_slug>
		<wp:tag_name><![CDATA[production]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>401</wp:term_id>
		<wp:tag_slug><![CDATA[productivity]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Productivity]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>402</wp:term_id>
		<wp:tag_slug><![CDATA[professional]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Professional]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>403</wp:term_id>
		<wp:tag_slug><![CDATA[profile]]></wp:tag_slug>
		<wp:tag_name><![CDATA[profile]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>648</wp:term_id>
		<wp:tag_slug><![CDATA[programming]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Programming]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>404</wp:term_id>
		<wp:tag_slug><![CDATA[progress]]></wp:tag_slug>
		<wp:tag_name><![CDATA[progress]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>405</wp:term_id>
		<wp:tag_slug><![CDATA[progressive]]></wp:tag_slug>
		<wp:tag_name><![CDATA[progressive]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>406</wp:term_id>
		<wp:tag_slug><![CDATA[project]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Project]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>662</wp:term_id>
		<wp:tag_slug><![CDATA[projects]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Projects]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>664</wp:term_id>
		<wp:tag_slug><![CDATA[promises]]></wp:tag_slug>
		<wp:tag_name><![CDATA[promises]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>708</wp:term_id>
		<wp:tag_slug><![CDATA[promo]]></wp:tag_slug>
		<wp:tag_name><![CDATA[promo]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>622</wp:term_id>
		<wp:tag_slug><![CDATA[prototype]]></wp:tag_slug>
		<wp:tag_name><![CDATA[prototype]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>715</wp:term_id>
		<wp:tag_slug><![CDATA[publisher]]></wp:tag_slug>
		<wp:tag_name><![CDATA[publisher]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>681</wp:term_id>
		<wp:tag_slug><![CDATA[publishing]]></wp:tag_slug>
		<wp:tag_name><![CDATA[publishing]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>408</wp:term_id>
		<wp:tag_slug><![CDATA[puerto-viejo]]></wp:tag_slug>
		<wp:tag_name><![CDATA[puerto viejo]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>409</wp:term_id>
		<wp:tag_slug><![CDATA[puremvc]]></wp:tag_slug>
		<wp:tag_name><![CDATA[PureMVC]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>410</wp:term_id>
		<wp:tag_slug><![CDATA[rank]]></wp:tag_slug>
		<wp:tag_name><![CDATA[rank]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>411</wp:term_id>
		<wp:tag_slug><![CDATA[rant]]></wp:tag_slug>
		<wp:tag_name><![CDATA[rant]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>676</wp:term_id>
		<wp:tag_slug><![CDATA[react]]></wp:tag_slug>
		<wp:tag_name><![CDATA[react]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>680</wp:term_id>
		<wp:tag_slug><![CDATA[react-native]]></wp:tag_slug>
		<wp:tag_name><![CDATA[React-Native]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>412</wp:term_id>
		<wp:tag_slug><![CDATA[read]]></wp:tag_slug>
		<wp:tag_name><![CDATA[read]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>413</wp:term_id>
		<wp:tag_slug><![CDATA[recursing]]></wp:tag_slug>
		<wp:tag_name><![CDATA[recursing]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>414</wp:term_id>
		<wp:tag_slug><![CDATA[release]]></wp:tag_slug>
		<wp:tag_name><![CDATA[release]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>415</wp:term_id>
		<wp:tag_slug><![CDATA[rendering]]></wp:tag_slug>
		<wp:tag_name><![CDATA[rendering]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>416</wp:term_id>
		<wp:tag_slug><![CDATA[resize]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Resize]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>569</wp:term_id>
		<wp:tag_slug><![CDATA[resources]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Resources]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>417</wp:term_id>
		<wp:tag_slug><![CDATA[retreat]]></wp:tag_slug>
		<wp:tag_name><![CDATA[retreat]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>418</wp:term_id>
		<wp:tag_slug><![CDATA[review]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Review]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>419</wp:term_id>
		<wp:tag_slug><![CDATA[right-click]]></wp:tag_slug>
		<wp:tag_name><![CDATA[right-click]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>420</wp:term_id>
		<wp:tag_slug><![CDATA[rightclick]]></wp:tag_slug>
		<wp:tag_name><![CDATA[rightclick]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>421</wp:term_id>
		<wp:tag_slug><![CDATA[rio]]></wp:tag_slug>
		<wp:tag_name><![CDATA[rio]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>422</wp:term_id>
		<wp:tag_slug><![CDATA[robot-legs]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Robot Legs]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>423</wp:term_id>
		<wp:tag_slug><![CDATA[robotlegs]]></wp:tag_slug>
		<wp:tag_name><![CDATA[RobotLegs]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>424</wp:term_id>
		<wp:tag_slug><![CDATA[rock-climbing]]></wp:tag_slug>
		<wp:tag_name><![CDATA[rock climbing]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>425</wp:term_id>
		<wp:tag_slug><![CDATA[rockyou]]></wp:tag_slug>
		<wp:tag_name><![CDATA[rockyou]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>426</wp:term_id>
		<wp:tag_slug><![CDATA[rollover]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Rollover]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>427</wp:term_id>
		<wp:tag_slug><![CDATA[rss]]></wp:tag_slug>
		<wp:tag_name><![CDATA[RSS]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>428</wp:term_id>
		<wp:tag_slug><![CDATA[rts]]></wp:tag_slug>
		<wp:tag_name><![CDATA[rts]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>429</wp:term_id>
		<wp:tag_slug><![CDATA[ruins]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ruins]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>430</wp:term_id>
		<wp:tag_slug><![CDATA[salford]]></wp:tag_slug>
		<wp:tag_name><![CDATA[salford]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>431</wp:term_id>
		<wp:tag_slug><![CDATA[samara]]></wp:tag_slug>
		<wp:tag_name><![CDATA[samara]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>432</wp:term_id>
		<wp:tag_slug><![CDATA[san]]></wp:tag_slug>
		<wp:tag_name><![CDATA[san]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>433</wp:term_id>
		<wp:tag_slug><![CDATA[san-blas]]></wp:tag_slug>
		<wp:tag_name><![CDATA[san blas]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>434</wp:term_id>
		<wp:tag_slug><![CDATA[sand]]></wp:tag_slug>
		<wp:tag_name><![CDATA[sand]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>435</wp:term_id>
		<wp:tag_slug><![CDATA[sci-fi]]></wp:tag_slug>
		<wp:tag_name><![CDATA[sci-fi]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>436</wp:term_id>
		<wp:tag_slug><![CDATA[scifi]]></wp:tag_slug>
		<wp:tag_name><![CDATA[SciFi]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>437</wp:term_id>
		<wp:tag_slug><![CDATA[score]]></wp:tag_slug>
		<wp:tag_name><![CDATA[score]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>438</wp:term_id>
		<wp:tag_slug><![CDATA[screen-edge]]></wp:tag_slug>
		<wp:tag_name><![CDATA[screen edge]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>439</wp:term_id>
		<wp:tag_slug><![CDATA[sea]]></wp:tag_slug>
		<wp:tag_name><![CDATA[sea]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>440</wp:term_id>
		<wp:tag_slug><![CDATA[sea-lions]]></wp:tag_slug>
		<wp:tag_name><![CDATA[sea lions]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>441</wp:term_id>
		<wp:tag_slug><![CDATA[security]]></wp:tag_slug>
		<wp:tag_name><![CDATA[security]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>442</wp:term_id>
		<wp:tag_slug><![CDATA[server]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Server]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>443</wp:term_id>
		<wp:tag_slug><![CDATA[shader]]></wp:tag_slug>
		<wp:tag_name><![CDATA[shader]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>603</wp:term_id>
		<wp:tag_slug><![CDATA[shaders]]></wp:tag_slug>
		<wp:tag_name><![CDATA[shaders]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>444</wp:term_id>
		<wp:tag_slug><![CDATA[shadow]]></wp:tag_slug>
		<wp:tag_name><![CDATA[shadow]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>600</wp:term_id>
		<wp:tag_slug><![CDATA[shadows]]></wp:tag_slug>
		<wp:tag_name><![CDATA[shadows]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>445</wp:term_id>
		<wp:tag_slug><![CDATA[shipit]]></wp:tag_slug>
		<wp:tag_name><![CDATA[shipit]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>636</wp:term_id>
		<wp:tag_slug><![CDATA[shouldidrive]]></wp:tag_slug>
		<wp:tag_name><![CDATA[shouldidrive]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>446</wp:term_id>
		<wp:tag_slug><![CDATA[signals]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Signals]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>447</wp:term_id>
		<wp:tag_slug><![CDATA[simple]]></wp:tag_slug>
		<wp:tag_name><![CDATA[simple]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>448</wp:term_id>
		<wp:tag_slug><![CDATA[simulation]]></wp:tag_slug>
		<wp:tag_name><![CDATA[simulation]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>449</wp:term_id>
		<wp:tag_slug><![CDATA[singing]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Singing]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>450</wp:term_id>
		<wp:tag_slug><![CDATA[site]]></wp:tag_slug>
		<wp:tag_name><![CDATA[site]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>601</wp:term_id>
		<wp:tag_slug><![CDATA[skybox]]></wp:tag_slug>
		<wp:tag_name><![CDATA[skybox]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>451</wp:term_id>
		<wp:tag_slug><![CDATA[skype]]></wp:tag_slug>
		<wp:tag_name><![CDATA[skype]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>452</wp:term_id>
		<wp:tag_slug><![CDATA[sleep]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Sleep]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>453</wp:term_id>
		<wp:tag_slug><![CDATA[slides]]></wp:tag_slug>
		<wp:tag_name><![CDATA[slides]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>454</wp:term_id>
		<wp:tag_slug><![CDATA[social]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Social]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>455</wp:term_id>
		<wp:tag_slug><![CDATA[solution]]></wp:tag_slug>
		<wp:tag_name><![CDATA[solution]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>456</wp:term_id>
		<wp:tag_slug><![CDATA[soundcloud]]></wp:tag_slug>
		<wp:tag_name><![CDATA[soundcloud]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>457</wp:term_id>
		<wp:tag_slug><![CDATA[source]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Source]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>458</wp:term_id>
		<wp:tag_slug><![CDATA[south-america]]></wp:tag_slug>
		<wp:tag_name><![CDATA[south america]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>459</wp:term_id>
		<wp:tag_slug><![CDATA[space]]></wp:tag_slug>
		<wp:tag_name><![CDATA[space]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>460</wp:term_id>
		<wp:tag_slug><![CDATA[spam]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Spam]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>461</wp:term_id>
		<wp:tag_slug><![CDATA[spark]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Spark]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>462</wp:term_id>
		<wp:tag_slug><![CDATA[speaking]]></wp:tag_slug>
		<wp:tag_name><![CDATA[speaking]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>463</wp:term_id>
		<wp:tag_slug><![CDATA[speed]]></wp:tag_slug>
		<wp:tag_name><![CDATA[speed]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>464</wp:term_id>
		<wp:tag_slug><![CDATA[spider]]></wp:tag_slug>
		<wp:tag_name><![CDATA[spider]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>465</wp:term_id>
		<wp:tag_slug><![CDATA[sponsorship]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Sponsorship]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>466</wp:term_id>
		<wp:tag_slug><![CDATA[sprites]]></wp:tag_slug>
		<wp:tag_name><![CDATA[sprites]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>467</wp:term_id>
		<wp:tag_slug><![CDATA[ssao]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ssao]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>468</wp:term_id>
		<wp:tag_slug><![CDATA[starcraft2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Starcraft2]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>469</wp:term_id>
		<wp:tag_slug><![CDATA[starling]]></wp:tag_slug>
		<wp:tag_name><![CDATA[starling]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>672</wp:term_id>
		<wp:tag_slug><![CDATA[startup]]></wp:tag_slug>
		<wp:tag_name><![CDATA[startup]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>470</wp:term_id>
		<wp:tag_slug><![CDATA[stateless]]></wp:tag_slug>
		<wp:tag_name><![CDATA[stateless]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>471</wp:term_id>
		<wp:tag_slug><![CDATA[steal]]></wp:tag_slug>
		<wp:tag_name><![CDATA[steal]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>677</wp:term_id>
		<wp:tag_slug><![CDATA[steam]]></wp:tag_slug>
		<wp:tag_name><![CDATA[steam]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>472</wp:term_id>
		<wp:tag_slug><![CDATA[stolen]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Stolen]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>712</wp:term_id>
		<wp:tag_slug><![CDATA[store]]></wp:tag_slug>
		<wp:tag_name><![CDATA[store]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>559</wp:term_id>
		<wp:tag_slug><![CDATA[strangeioc]]></wp:tag_slug>
		<wp:tag_name><![CDATA[strangeIoC]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>473</wp:term_id>
		<wp:tag_slug><![CDATA[strato]]></wp:tag_slug>
		<wp:tag_name><![CDATA[strato]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>474</wp:term_id>
		<wp:tag_slug><![CDATA[stray]]></wp:tag_slug>
		<wp:tag_name><![CDATA[stray]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>475</wp:term_id>
		<wp:tag_slug><![CDATA[stream]]></wp:tag_slug>
		<wp:tag_name><![CDATA[stream]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>476</wp:term_id>
		<wp:tag_slug><![CDATA[stunt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Stunt]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>714</wp:term_id>
		<wp:tag_slug><![CDATA[success]]></wp:tag_slug>
		<wp:tag_name><![CDATA[success]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>477</wp:term_id>
		<wp:tag_slug><![CDATA[sugarloaf]]></wp:tag_slug>
		<wp:tag_name><![CDATA[sugarloaf]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>478</wp:term_id>
		<wp:tag_slug><![CDATA[summary]]></wp:tag_slug>
		<wp:tag_name><![CDATA[summary]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>479</wp:term_id>
		<wp:tag_slug><![CDATA[sun]]></wp:tag_slug>
		<wp:tag_name><![CDATA[sun]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>649</wp:term_id>
		<wp:tag_slug><![CDATA[swft]]></wp:tag_slug>
		<wp:tag_name><![CDATA[SWFt]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>480</wp:term_id>
		<wp:tag_slug><![CDATA[swift-suspenders]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Swift Suspenders]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>481</wp:term_id>
		<wp:tag_slug><![CDATA[swiftsuspenders]]></wp:tag_slug>
		<wp:tag_name><![CDATA[swiftsuspenders]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>482</wp:term_id>
		<wp:tag_slug><![CDATA[sync]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Sync]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>483</wp:term_id>
		<wp:tag_slug><![CDATA[tale]]></wp:tag_slug>
		<wp:tag_name><![CDATA[tale]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>484</wp:term_id>
		<wp:tag_slug><![CDATA[talk]]></wp:tag_slug>
		<wp:tag_name><![CDATA[talk]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>485</wp:term_id>
		<wp:tag_slug><![CDATA[taskbar]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Taskbar]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>486</wp:term_id>
		<wp:tag_slug><![CDATA[taskbars]]></wp:tag_slug>
		<wp:tag_name><![CDATA[taskbars]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>701</wp:term_id>
		<wp:tag_slug><![CDATA[taslk]]></wp:tag_slug>
		<wp:tag_name><![CDATA[taslk]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>487</wp:term_id>
		<wp:tag_slug><![CDATA[tavel]]></wp:tag_slug>
		<wp:tag_name><![CDATA[tavel]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>488</wp:term_id>
		<wp:tag_slug><![CDATA[tdd]]></wp:tag_slug>
		<wp:tag_name><![CDATA[tdd]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>637</wp:term_id>
		<wp:tag_slug><![CDATA[team]]></wp:tag_slug>
		<wp:tag_name><![CDATA[team]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>489</wp:term_id>
		<wp:tag_slug><![CDATA[teaser]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Teaser]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>490</wp:term_id>
		<wp:tag_slug><![CDATA[tech]]></wp:tag_slug>
		<wp:tag_name><![CDATA[tech]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>491</wp:term_id>
		<wp:tag_slug><![CDATA[technology]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Technology]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>492</wp:term_id>
		<wp:tag_slug><![CDATA[techo]]></wp:tag_slug>
		<wp:tag_name><![CDATA[techo]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>493</wp:term_id>
		<wp:tag_slug><![CDATA[terraria]]></wp:tag_slug>
		<wp:tag_name><![CDATA[terraria]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>565</wp:term_id>
		<wp:tag_slug><![CDATA[test]]></wp:tag_slug>
		<wp:tag_name><![CDATA[test]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>494</wp:term_id>
		<wp:tag_slug><![CDATA[testing]]></wp:tag_slug>
		<wp:tag_name><![CDATA[testing]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>495</wp:term_id>
		<wp:tag_slug><![CDATA[textures]]></wp:tag_slug>
		<wp:tag_name><![CDATA[textures]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>496</wp:term_id>
		<wp:tag_slug><![CDATA[theme]]></wp:tag_slug>
		<wp:tag_name><![CDATA[theme]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>497</wp:term_id>
		<wp:tag_slug><![CDATA[thetrip]]></wp:tag_slug>
		<wp:tag_name><![CDATA[thetrip]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>498</wp:term_id>
		<wp:tag_slug><![CDATA[three-js]]></wp:tag_slug>
		<wp:tag_name><![CDATA[three.js]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>499</wp:term_id>
		<wp:tag_slug><![CDATA[threejs]]></wp:tag_slug>
		<wp:tag_name><![CDATA[threejs]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>500</wp:term_id>
		<wp:tag_slug><![CDATA[tile]]></wp:tag_slug>
		<wp:tag_name><![CDATA[tile]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>501</wp:term_id>
		<wp:tag_slug><![CDATA[tilemaps]]></wp:tag_slug>
		<wp:tag_name><![CDATA[tilemaps]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>502</wp:term_id>
		<wp:tag_slug><![CDATA[timelapse]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Timelapse]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>503</wp:term_id>
		<wp:tag_slug><![CDATA[tip]]></wp:tag_slug>
		<wp:tag_name><![CDATA[tip]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>504</wp:term_id>
		<wp:tag_slug><![CDATA[tips]]></wp:tag_slug>
		<wp:tag_name><![CDATA[tips]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>505</wp:term_id>
		<wp:tag_slug><![CDATA[tool]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Tool]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>506</wp:term_id>
		<wp:tag_slug><![CDATA[toronto]]></wp:tag_slug>
		<wp:tag_name><![CDATA[toronto]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>507</wp:term_id>
		<wp:tag_slug><![CDATA[towerdefense]]></wp:tag_slug>
		<wp:tag_name><![CDATA[TowerDefense]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>508</wp:term_id>
		<wp:tag_slug><![CDATA[track]]></wp:tag_slug>
		<wp:tag_name><![CDATA[track]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>509</wp:term_id>
		<wp:tag_slug><![CDATA[trampoleen]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Trampoleen]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>510</wp:term_id>
		<wp:tag_slug><![CDATA[trance]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Trance]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>511</wp:term_id>
		<wp:tag_slug><![CDATA[travel-2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[travel]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>606</wp:term_id>
		<wp:tag_slug><![CDATA[trello]]></wp:tag_slug>
		<wp:tag_name><![CDATA[trello]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>512</wp:term_id>
		<wp:tag_slug><![CDATA[tri]]></wp:tag_slug>
		<wp:tag_name><![CDATA[tri]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>513</wp:term_id>
		<wp:tag_slug><![CDATA[trick]]></wp:tag_slug>
		<wp:tag_name><![CDATA[trick]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>514</wp:term_id>
		<wp:tag_slug><![CDATA[trijillo]]></wp:tag_slug>
		<wp:tag_name><![CDATA[trijillo]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>515</wp:term_id>
		<wp:tag_slug><![CDATA[trip]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Trip]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>516</wp:term_id>
		<wp:tag_slug><![CDATA[trvel]]></wp:tag_slug>
		<wp:tag_name><![CDATA[trvel]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>517</wp:term_id>
		<wp:tag_slug><![CDATA[tryharder]]></wp:tag_slug>
		<wp:tag_name><![CDATA[tryharder]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>518</wp:term_id>
		<wp:tag_slug><![CDATA[tumblr]]></wp:tag_slug>
		<wp:tag_name><![CDATA[tumblr]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>519</wp:term_id>
		<wp:tag_slug><![CDATA[tv]]></wp:tag_slug>
		<wp:tag_name><![CDATA[tv]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>520</wp:term_id>
		<wp:tag_slug><![CDATA[twitter]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Twitter]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>521</wp:term_id>
		<wp:tag_slug><![CDATA[typescript-2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[typescript]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>522</wp:term_id>
		<wp:tag_slug><![CDATA[tyrona]]></wp:tag_slug>
		<wp:tag_name><![CDATA[tyrona]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>561</wp:term_id>
		<wp:tag_slug><![CDATA[unit-testing]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Unit Testing]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>564</wp:term_id>
		<wp:tag_slug><![CDATA[unity-2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[unity]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>633</wp:term_id>
		<wp:tag_slug><![CDATA[unity3d]]></wp:tag_slug>
		<wp:tag_name><![CDATA[unity3d]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>523</wp:term_id>
		<wp:tag_slug><![CDATA[university]]></wp:tag_slug>
		<wp:tag_name><![CDATA[university]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>524</wp:term_id>
		<wp:tag_slug><![CDATA[update]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Update]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>525</wp:term_id>
		<wp:tag_slug><![CDATA[upgrade]]></wp:tag_slug>
		<wp:tag_name><![CDATA[upgrade]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>526</wp:term_id>
		<wp:tag_slug><![CDATA[upload]]></wp:tag_slug>
		<wp:tag_name><![CDATA[upload]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>527</wp:term_id>
		<wp:tag_slug><![CDATA[uraguay]]></wp:tag_slug>
		<wp:tag_name><![CDATA[uraguay]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>528</wp:term_id>
		<wp:tag_slug><![CDATA[uri]]></wp:tag_slug>
		<wp:tag_name><![CDATA[uri]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>529</wp:term_id>
		<wp:tag_slug><![CDATA[users]]></wp:tag_slug>
		<wp:tag_name><![CDATA[users]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>571</wp:term_id>
		<wp:tag_slug><![CDATA[util]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Util]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>530</wp:term_id>
		<wp:tag_slug><![CDATA[utility]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Utility]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>567</wp:term_id>
		<wp:tag_slug><![CDATA[utils]]></wp:tag_slug>
		<wp:tag_name><![CDATA[utils]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>531</wp:term_id>
		<wp:tag_slug><![CDATA[version]]></wp:tag_slug>
		<wp:tag_name><![CDATA[version]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>532</wp:term_id>
		<wp:tag_slug><![CDATA[video]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Video]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>533</wp:term_id>
		<wp:tag_slug><![CDATA[vietnam]]></wp:tag_slug>
		<wp:tag_name><![CDATA[vietnam]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>534</wp:term_id>
		<wp:tag_slug><![CDATA[virus]]></wp:tag_slug>
		<wp:tag_name><![CDATA[virus]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>535</wp:term_id>
		<wp:tag_slug><![CDATA[visualise]]></wp:tag_slug>
		<wp:tag_name><![CDATA[visualise]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>536</wp:term_id>
		<wp:tag_slug><![CDATA[washington]]></wp:tag_slug>
		<wp:tag_name><![CDATA[washington]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>537</wp:term_id>
		<wp:tag_slug><![CDATA[watch]]></wp:tag_slug>
		<wp:tag_name><![CDATA[watch]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>538</wp:term_id>
		<wp:tag_slug><![CDATA[water]]></wp:tag_slug>
		<wp:tag_name><![CDATA[water]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>539</wp:term_id>
		<wp:tag_slug><![CDATA[waterfall]]></wp:tag_slug>
		<wp:tag_name><![CDATA[waterfall]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>540</wp:term_id>
		<wp:tag_slug><![CDATA[wave]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Wave]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>541</wp:term_id>
		<wp:tag_slug><![CDATA[wbfg]]></wp:tag_slug>
		<wp:tag_name><![CDATA[WBFG]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>542</wp:term_id>
		<wp:tag_slug><![CDATA[web]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Web]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>616</wp:term_id>
		<wp:tag_slug><![CDATA[web-components]]></wp:tag_slug>
		<wp:tag_name><![CDATA[web components]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>543</wp:term_id>
		<wp:tag_slug><![CDATA[webfusion]]></wp:tag_slug>
		<wp:tag_name><![CDATA[webfusion]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>650</wp:term_id>
		<wp:tag_slug><![CDATA[webgl]]></wp:tag_slug>
		<wp:tag_name><![CDATA[WebGL]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>544</wp:term_id>
		<wp:tag_slug><![CDATA[website]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Website]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>651</wp:term_id>
		<wp:tag_slug><![CDATA[websites]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Websites]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>545</wp:term_id>
		<wp:tag_slug><![CDATA[windows]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Windows]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>546</wp:term_id>
		<wp:tag_slug><![CDATA[windows-7]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Windows 7]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>707</wp:term_id>
		<wp:tag_slug><![CDATA[windows-store]]></wp:tag_slug>
		<wp:tag_name><![CDATA[windows store]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>547</wp:term_id>
		<wp:tag_slug><![CDATA[windows7]]></wp:tag_slug>
		<wp:tag_name><![CDATA[windows7]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>548</wp:term_id>
		<wp:tag_slug><![CDATA[wordpress]]></wp:tag_slug>
		<wp:tag_name><![CDATA[wordpress]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>549</wp:term_id>
		<wp:tag_slug><![CDATA[world]]></wp:tag_slug>
		<wp:tag_name><![CDATA[world]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>550</wp:term_id>
		<wp:tag_slug><![CDATA[worms]]></wp:tag_slug>
		<wp:tag_name><![CDATA[worms]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>705</wp:term_id>
		<wp:tag_slug><![CDATA[wpf]]></wp:tag_slug>
		<wp:tag_name><![CDATA[WPF]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>551</wp:term_id>
		<wp:tag_slug><![CDATA[wwx]]></wp:tag_slug>
		<wp:tag_name><![CDATA[wwx]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>552</wp:term_id>
		<wp:tag_slug><![CDATA[xbox]]></wp:tag_slug>
		<wp:tag_name><![CDATA[xbox]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>652</wp:term_id>
		<wp:tag_slug><![CDATA[xna]]></wp:tag_slug>
		<wp:tag_name><![CDATA[XNA]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>553</wp:term_id>
		<wp:tag_slug><![CDATA[zero-conf]]></wp:tag_slug>
		<wp:tag_name><![CDATA[zero conf]]></wp:tag_name>
	</wp:tag>
	<wp:term>
		<wp:term_id><![CDATA[698]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[cubeportfolio_category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[games]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Games]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[699]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[cubeportfolio_category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[projects]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Projects]]></wp:term_name>
	</wp:term>
	<wp:term><wp:term_id>632</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[footer]]></wp:term_slug><wp:term_name><![CDATA[Footer]]></wp:term_name>
</wp:term>
	<wp:term><wp:term_id>554</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[main]]></wp:term_slug><wp:term_name><![CDATA[main]]></wp:term_name>
</wp:term>
	<wp:term><wp:term_id>631</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[primary]]></wp:term_slug><wp:term_name><![CDATA[Primary]]></wp:term_name>
</wp:term>

	<generator>https://wordpress.org/?v=4.8.2</generator>
<site xmlns="com-wordpress:feed-additions:1">65237888</site>
	
	<item>
		<title>North Western Australia, Winter 2014</title>
		<link>https://www.mikecann.co.uk/photos-personal/north-western-australia-winter-2014/</link>
		<pubDate>Sat, 30 Aug 2014 06:15:18 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://www.mikecann.co.uk/?p=5331</guid>
		<description></description>
		<content:encoded><![CDATA[Well I have been back for over 3 weeks now but only just got round to uploading the pictures and videos from my 3 week trip up north. I had an absolute blast exploring some of the more remote Australian countryside. 

This was the rough journey we took:

<iframe src="https://mapsengine.google.com/map/embed?mid=zqHG_2WyX1Rw.kCEeJQ21ypI8" width="640" height="480"></iframe>

From Bunbury to Broome was 4 days in a car with Kelsie and her parents. We stopped off at a few beautiful spots along the way:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-2.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-2-1024x682.jpg" alt="photo-2" width="940" height="626" class="alignnone size-large wp-image-5348" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-4.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-4-1024x682.jpg" alt="photo-4" width="940" height="626" class="alignnone size-large wp-image-5349" /></a>

<iframe width="640" height="360" src="//www.youtube.com/embed/xIWDnoPbP0M" frameborder="0" allowfullscreen></iframe>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-5.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-5-1024x682.jpg" alt="photo-5" width="940" height="626" class="alignnone size-large wp-image-5350" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-6.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-6-665x1024.jpg" alt="photo-6" width="665" height="1024" class="alignnone size-large wp-image-5351" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-12.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-12-1024x682.jpg" alt="photo-12" width="940" height="626" class="alignnone size-large wp-image-5352" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-15.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-15-1024x781.jpg" alt="photo-15" width="940" height="716" class="alignnone size-large wp-image-5354" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-24.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-24-1024x682.jpg" alt="photo-24" width="940" height="626" class="alignnone size-large wp-image-5355" /></a>

<iframe width="640" height="360" src="//www.youtube.com/embed/aXWZclVWrdE" frameborder="0" allowfullscreen></iframe>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-25.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-25-1024x682.jpg" alt="photo-25" width="940" height="626" class="alignnone size-large wp-image-5356" /></a>

We even managed to make it over to Dampier for a quick photo with the <a href="https://en.wikipedia.org/wiki/Red_Dog_(film)">Red Dog</a> statue:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-26.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-26-929x1024.jpg" alt="photo-26" width="929" height="1024" class="alignnone size-large wp-image-5357" /></a>

Once we arrived at Broome we met up with Kelsie's Brother Trent and his Fiancé Emily who live up there and spent a few days chilling out around the beautiful area:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-31.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-31-1024x682.jpg" alt="photo-31" width="940" height="626" class="alignnone size-large wp-image-5362" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-32.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-32-1024x682.jpg" alt="photo-32" width="940" height="626" class="alignnone size-large wp-image-5363" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-35.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-35-1024x682.jpg" alt="photo-35" width="940" height="626" class="alignnone size-large wp-image-5364" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-37.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-37-1024x682.jpg" alt="photo-37" width="940" height="626" class="alignnone size-large wp-image-5365" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-39.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-39-1024x682.jpg" alt="photo-39" width="940" height="626" class="alignnone size-large wp-image-5366" /></a>

After a few days we were off again, this time two cars; Kelsie, Myself, Trent and Emily in one and Kelsie's parents and their friend in the other. Our route took us along the Gib River road (a dirt road inaccessible for part of the year) all the way to our destination of Kununurra. Along the way we stopped at nice  spots:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-69.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-69-768x1024.jpg" alt="photo-69" width="768" height="1024" class="alignnone size-large wp-image-5368" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-41.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-41-1024x682.jpg" alt="photo-41" width="940" height="626" class="alignnone size-large wp-image-5369" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-57.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-57-1024x682.jpg" alt="photo-57" width="940" height="626" class="alignnone size-large wp-image-5370" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-59.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-59-1024x682.jpg" alt="photo-59" width="940" height="626" class="alignnone size-large wp-image-5371" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-66.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-66-1024x682.jpg" alt="photo-66" width="940" height="626" class="alignnone size-large wp-image-5372" /></a>

<iframe width="640" height="360" src="//www.youtube.com/embed/MVq6WYZe9iM" frameborder="0" allowfullscreen></iframe>

Once at Kununurra we had a few days to explore the spectacular landscape:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-91.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-91-1024x682.jpg" alt="photo-91" width="940" height="626" class="alignnone size-large wp-image-5373" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-93.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-93-1024x682.jpg" alt="photo-93" width="940" height="626" class="alignnone size-large wp-image-5374" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-74.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-74-1024x682.jpg" alt="photo-74" width="940" height="626" class="alignnone size-large wp-image-5375" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-82.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-82-1024x682.jpg" alt="photo-82" width="940" height="626" class="alignnone size-large wp-image-5376" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-86.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-86-1024x682.jpg" alt="photo-86" width="940" height="626" class="alignnone size-large wp-image-5377" /></a>

After just a short time we hit the road again and headed back to Broome, we took the highway on the way back so it only took a couple of days. This gave us more time to spend in Broome again:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-103.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-103-856x1024.jpg" alt="photo-103" width="856" height="1024" class="alignnone size-large wp-image-5378" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-106.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-106-1024x682.jpg" alt="photo-106" width="940" height="626" class="alignnone size-large wp-image-5379" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-109.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-109-1024x682.jpg" alt="photo-109" width="940" height="626" class="alignnone size-large wp-image-5380" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-110.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-110-682x1024.jpg" alt="photo-110" width="682" height="1024" class="alignnone size-large wp-image-5381" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-116.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-116-682x1024.jpg" alt="photo-116" width="682" height="1024" class="alignnone size-large wp-image-5382" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-100.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-100-1024x682.jpg" alt="photo-100" width="940" height="626" class="alignnone size-large wp-image-5383" /></a>

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-101.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/photo-101-1024x682.jpg" alt="photo-101" width="940" height="626" class="alignnone size-large wp-image-5384" /></a>

And then it was all over! Kelsie and I flew back to Bunbury while her parents drove the car back.

I had an awesome time 'up north' exploring more of Australia, I cant wait to see more of it in the future!
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5331</wp:post_id>
		<wp:post_date><![CDATA[2014-08-30 06:15:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-08-30 06:15:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[north-western-australia-winter-2014]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="australia"><![CDATA[australia]]></category>
		<category domain="post_tag" nicename="photos"><![CDATA[Photos]]></category>
		<category domain="category" nicename="photos-personal"><![CDATA[Photos &amp; Personal]]></category>
		<category domain="post_tag" nicename="travel-2"><![CDATA[travel]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[5332]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1508880631;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:6175;}i:1;a:1:{s:2:"id";i:4676;}i:2;a:1:{s:2:"id";i:3044;}}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>

	<item>
		<title>Mr Nibbles 3D Development 08 - New Models and Shaders </title>
		<link>https://www.mikecann.co.uk/myprojects/mr-nibbles-3d/mr-nibbles-3d-development-08-new-models-and-shaders/</link>
		<pubDate>Sun, 31 Aug 2014 03:12:36 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://www.mikecann.co.uk/?p=5386</guid>
		<description></description>
		<content:encoded><![CDATA[Its been a little while since I have had any time to work on my new game Mr Nibbles 3D but i'm happy to be back developing again. I have conscripted a friend of mine to do the artwork for the game and he has been busy over the last few weeks coming up with some new models of the game. 

Check the image above to see his render of Mr Nibbles with his corn 'nibbles' or checkout the video below where I show off some new things:

<iframe width="640" height="360" src="//www.youtube.com/embed/VsD9OG7nqgg" frameborder="0" allowfullscreen></iframe>

Note this is just a first pass of the models so the animation quality should improve a lot soon, also we are working on a roll animation for when Mr Nibbles moves fast. 

The pipes are a first pass too but im hoping to emulate plastic hamster tubes such as:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/08/21021_gallery.jpg"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/08/21021_gallery.jpg" alt="21021_gallery" width="500" height="500" class="alignnone size-full wp-image-5391" /></a>

I've still got quite a bit more work to do on the shaders but I think we are getting there, let me know what you think!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5386</wp:post_id>
		<wp:post_date><![CDATA[2014-08-31 03:12:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-08-31 03:12:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mr-nibbles-3d-development-08-new-models-and-shaders]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="models"><![CDATA[models]]></category>
		<category domain="category" nicename="mr-nibbles-3d"><![CDATA[Mr Nibbles 3D]]></category>
		<category domain="post_tag" nicename="nibbles"><![CDATA[nibbles]]></category>
		<category domain="post_tag" nicename="shaders"><![CDATA[shaders]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[5390]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1508880630;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:5411;}i:1;a:1:{s:2:"id";i:6093;}i:2;a:1:{s:2:"id";i:5670;}}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>

	<item>
		<title>Indie Game Project Management with Trello</title>
		<link>https://www.mikecann.co.uk/misc/indie-game-project-management-with-trello/</link>
		<pubDate>Sun, 21 Sep 2014 06:28:46 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://www.mikecann.co.uk/?p=5396</guid>
		<description></description>
		<content:encoded><![CDATA[Project management is one of those things that can easily be shrugged away and forgotten about when developing indie games. The temptation is to just leap in and start making without any thought to what the priorities are or how long things are going to take. 

This is all well and good when its only one of you working on the project but when you start involving multiple people things get a bit more tricky. It becomes difficult for everyone to know what everyone else is doing or what they should be doing next. 

There are lots of tools out there to help with project management such <a href="https://www.zoho.com/projects/">Zoho</a> or <a href="https://www.teamwork.com/">Teamwork</a>. I invested quite a few of them but in the end I settled upon <a href="https://trello.com/">Trello</a>. 

Trello isn't strictly a project management tool per se rather its more of a flexible organisational tool. You can use it however you want really and it's that flexibility, ease of use and importantly pricing (free) that attracted me towards it for managing my indie game projects.

Projects are split into "Boards":

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/09/screenshot_021-Sep.-21-13.48.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/09/screenshot_021-Sep.-21-13.48.png" alt="screenshot_021 Sep. 21 13.48" width="918" height="519" class="alignnone size-full wp-image-5399" /></a>

Within a board you have a number of "Lists" which in turn contain "Cards"

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/09/screenshot_022-Sep.-21-13.49.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/09/screenshot_022-Sep.-21-13.49.png" alt="screenshot_022 Sep. 21 13.49" width="931" height="519" class="alignnone size-full wp-image-5400" /></a>

Cards and easily be created, removed and dragged between lists:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/09/drag-drop-trello.gif"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/09/drag-drop-trello.gif" alt="drag-drop-trello" width="640" height="566" class="alignnone size-full wp-image-5403" /></a>

The way I use it is to have each list represent a milestone or category and each card represents a single task. When a task is completed it is simply dragged to the "Done" list:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/09/screenshot_024-Sep.-21-14.20.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/09/screenshot_024-Sep.-21-14.20.png" alt="screenshot_024 Sep. 21 14.20" width="644" height="565" class="alignnone size-full wp-image-5405" /></a>

Priority is indicated by the order in the list, the higher the card the higher priority. The person responsible for that task is indicated by who is the "member":

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/09/screenshot_025-Sep.-21-14.22.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/09/screenshot_025-Sep.-21-14.22.png" alt="screenshot_025 Sep. 21 14.22" width="426" height="482" class="alignnone size-full wp-image-5406" /></a>

A task using labels I can indicate some important info about a particular task such as it is blocked for example: 

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/09/screenshot_026-Sep.-21-14.23.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/09/screenshot_026-Sep.-21-14.23.png" alt="screenshot_026 Sep. 21 14.23" width="562" height="325" class="alignnone size-full wp-image-5407" /></a>

Clicking a single card lets you bring up its details which lets you attach files for that task, add a description, checklist, comments and much more:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/09/screenshot_028-Sep.-21-14.24.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/09/screenshot_028-Sep.-21-14.24.png" alt="screenshot_028 Sep. 21 14.24" width="956" height="655" class="alignnone size-full wp-image-5408" /></a>

For me its a really flexible, simple cost effective and (oddly enough) fun way to manage a small indie project.

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5396</wp:post_id>
		<wp:post_date><![CDATA[2014-09-21 06:28:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-09-21 06:28:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[indie-game-project-management-with-trello]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="management"><![CDATA[management]]></category>
		<category domain="category" nicename="misc"><![CDATA[Misc]]></category>
		<category domain="post_tag" nicename="project"><![CDATA[Project]]></category>
		<category domain="category" nicename="myprojects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="trello"><![CDATA[trello]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[5397]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1509072146;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:5840;}i:1;a:1:{s:2:"id";i:5565;}i:2;a:1:{s:2:"id";i:170;}}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>856</wp:comment_id>
			<wp:comment_author><![CDATA[10 ways to use Trello to empower your game development | LiamTwose.com]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.liamtwose.com/trello-empowers-gamedevs/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.185.81.175]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-10-24 09:48:05]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-10-24 09:48:05]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] are just some of the many awesome ways, (here&#8217;s another) that you can use Trello to empower your game development, and by no means all of [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1414144085.4336299896240234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>884</wp:comment_id>
			<wp:comment_author><![CDATA[&#8220;Bananas, from here to eternity&#8221; &#8211; Bugs, Game Jams, Developer Art &#8211; Nice Games Club]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://nicegames.club/2016/12/bananas-from-here-to-eternity-bugs-game-jams-developer-art/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[69.89.31.77]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-12-27 00:24:26]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-12-27 00:24:26]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Bugs! Street Fighter II designer opens up about the cancelling &#8216;bug&#8217; &#8211; Gamasutra  &#8220;Indie Game Project Management with Trello&#8221; &#8211; Michael Cann Bethesda. Bethesda Never Changes&#8230; Regression testing &#8211; Wikipedia Goat Simulator Hits [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1482798266.8516919612884521484375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>

	<item>
		<title>Mr Nibbles 3D Development 09 - Animations</title>
		<link>https://www.mikecann.co.uk/programming/unity/mr-nibbles-3d-development-09-animations/</link>
		<pubDate>Mon, 29 Sep 2014 00:37:18 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://www.mikecann.co.uk/?p=5411</guid>
		<description></description>
		<content:encoded><![CDATA[Its been a little while since I have posted about Mr Nibbles 3D progress but we have been making progress slowly but surely. After a few hiccups creating and importing animations from C4D we now finally have Mr Nibbles in the game with mostly the correct animations in place, check out this video to see:

<iframe width="640" height="360" src="//www.youtube.com/embed/qG_zRFuP9y8" frameborder="0" allowfullscreen></iframe>

As you can see we have a few different idle animations in there which are randomly picked from when Mr Nibbles isn't moving. Then when he moves he slowly progresses between a walk, run and roll animations. 

There is still a few issues with the roll animation but I hope to fix them soon!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5411</wp:post_id>
		<wp:post_date><![CDATA[2014-09-29 00:37:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-09-29 00:37:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mr-nibbles-3d-development-09-animations]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d"><![CDATA[3d]]></category>
		<category domain="post_tag" nicename="animation"><![CDATA[animation]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[Game]]></category>
		<category domain="category" nicename="games-portfolio"><![CDATA[Games]]></category>
		<category domain="category" nicename="mr-nibbles-3d"><![CDATA[Mr Nibbles 3D]]></category>
		<category domain="post_tag" nicename="nibbles"><![CDATA[nibbles]]></category>
		<category domain="category" nicename="unity"><![CDATA[Unity]]></category>
		<category domain="post_tag" nicename="unity-2"><![CDATA[unity]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[5412]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1508953264;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:5386;}i:1;a:1:{s:2:"id";i:5306;}i:2;a:1:{s:2:"id";i:5542;}}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>

	<item>
		<title>Post To Tumblr 5.9</title>
		<link>https://www.mikecann.co.uk/myprojects/post-to-tumbr/post-to-tumblr-5-9/</link>
		<pubDate>Fri, 03 Oct 2014 01:18:15 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://www.mikecann.co.uk/?p=5414</guid>
		<description></description>
		<content:encoded><![CDATA[One thing that has always bothered me with Post To Tumblr ever since version 1.0, and I have finally fixed it in 5.9!

First I should explain how photo posting works in Post To Tumblr. Its pretty simple. First I take the URL of the image the user clicks on from Chrome, then send that URL to my server with some other information (such as formatting options) then I bundle all that up into an API call to Tumblr. Tumblr then takes that URL and downloads it, caching it to its own server returning a URL with the newly created post, I hand that back to the browser for the user to view and we are done.

Now the problem comes if Tumblr is unable to access that image. That could happen if the image is behind a password protected firewall such a GMail attachment or a private Facebook photo for example. 

The solution is to upload the image bytes to Tumblr directly so that Tumblr doesn't have to go and try to download the image from a URL. The problem is that the Tumblr API is a NIGHTMARE. Im not kidding, I have struggled for years (off and on) to try to get this to work with no hope.

An idea came to me the other day however, why not just cache that image on my server temporarily then provide a URL that tumblr can definitely access and use to download the image. Well after an hour or two of hacking I have it working!

<iframe width="640" height="360" src="//www.youtube.com/embed/Fpn6MVzjqss?list=UU9-RJld8R0v5ywwBT8csdZA" frameborder="0" allowfullscreen></iframe>

Images are cached on my Parse.com backend and will be deleted after a certain period of time. 

Im so happy to finally have this working. Now I have this in place I hope to get uploading from the desktop working soon!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5414</wp:post_id>
		<wp:post_date><![CDATA[2014-10-03 01:18:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-10-03 01:18:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[post-to-tumblr-5-9]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="image"><![CDATA[image]]></category>
		<category domain="post_tag" nicename="post-to-tumblr"><![CDATA[post to tumblr]]></category>
		<category domain="category" nicename="post-to-tumbr"><![CDATA[Post To Tumbr]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="tumblr"><![CDATA[tumblr]]></category>
		<category domain="category" nicename="typescript"><![CDATA[TypeScript]]></category>
		<category domain="post_tag" nicename="upload"><![CDATA[upload]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[5415]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1509107356;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:1392;}i:1;a:1:{s:2:"id";i:5320;}i:2;a:1:{s:2:"id";i:1427;}}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>

	<item>
		<title>MK Bridges</title>
		<link>https://www.mikecann.co.uk/portfolio/projects/mk-bridges/</link>
		<pubDate>Mon, 06 Oct 2014 23:53:48 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://www.mikecann.co.uk/?p=5418</guid>
		<description></description>
		<content:encoded><![CDATA[MK Bridges is an ongoing freelance project I worked on for Martin-Kaye Solicitors.

<!--more--> 

The firm works with a number of suppliers that provide them clients. Those suppliers need information about the progress of a case such as when certain milestones have been met. Unfortunately MK's current system doesn't easily allow for this reporting to third parties and thus they were logging into each supplier's website and manually entering the data whenever the case updated. As this can happen many times a day for each case the extra workload was high.

MK Bridges is a solution to that problem. It uses daily snapshots of the MK database to work out which milestones have been completed and then sends API calls to the relevant supplier thus saving a great deal of manual labour.

It was developed using ASP.NET 5 with Entity Framework 6 with some sprinkling of Typescript for the client side. 

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/10/screenshot_016-Oct.-06-16.11.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/10/screenshot_016-Oct.-06-16.11-1024x568.png" alt="screenshot_016 Oct. 06 16.11" width="940" height="521" class="alignnone size-large wp-image-5420" /></a>

Although the project sounds deceptively simple it was actually quite complex and required quite a bit of back and forth with suppliers and hosting providers to link it all up correctly. There is an internal error handling system that uses Mandril to report on errors, a message request and response logging system and a moderately complex system for filtering information to send and display in the user interface.

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5418</wp:post_id>
		<wp:post_date><![CDATA[2014-10-06 23:53:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-10-06 23:53:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mk-bridges]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="asp"><![CDATA[asp]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[C#]]></category>
		<category domain="category" nicename="mk-bridges"><![CDATA[MK Bridges]]></category>
		<category domain="category" nicename="portfolio"><![CDATA[Portfolio]]></category>
		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="post_tag" nicename="typescript-2"><![CDATA[typescript]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[5419]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1508880629;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:5292;}i:1;a:1:{s:2:"id";i:1944;}i:2;a:1:{s:2:"id";i:5458;}}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>

	<item>
		<title>Tinkering with Google Polymer and Typescript</title>
		<link>https://www.mikecann.co.uk/programming/tinkering-with-google-polymer-and-typescript/</link>
		<pubDate>Sun, 02 Nov 2014 05:18:13 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://www.mikecann.co.uk/?p=5426</guid>
		<description></description>
		<content:encoded><![CDATA[I recently had the opportunity to experiment with something I have been meaning to play with for a little while, Google's Polymer.

I first heard about Polymer at Google IO 2014:

[embed]https://www.youtube.com/watch?v=8OJ7ih8EE7s[/embed]

I highly recommend watching that video if you want to know more about Polymer but the high level idea is that its a library built on top of the new HTML Web Components and it allows us to write our own custom HTML elements in a way that makes sense.

I really liked the look of it as it reminded me greatly of Adobe's Flex (MXML) in the way you can write your own components in a declarative manner then bind to various data in the code behind.

So it took me a few days to get my head around things to begin with. One thing I would recommend if you are interested in tinkering with Polymer then first checkout this video:

[embed]https://www.youtube.com/watch?v=INH_OW4lFSs[/embed]

I wish I had used that to begin with as it would have saved me a whole heap of "is this the correct way to do it?" headaches.

One complication with my setup however is that I really wanted to use Typescript rather than raw Javascript for my code. Well fortunately Visual Studio has really great Typescript support and I was able to create a Typescript project in Visual studio and get cracking immediately.

I ran into an issue with how to use Polymer with Typescript however and there wasn't too much info on the web out there so hopefully this short guide will help:

<h2>1) Create your custom element</h2>

I'm using a login element as an example:

<b>login.html</b>
[code lang="HTML"]
&lt;link rel=&quot;import&quot; href=&quot;/bower_components/polymer/polymer.html&quot;&gt;
&lt;link rel=&quot;import&quot; href=&quot;/bower_components/paper-toast/paper-toast.html&quot;&gt;
&lt;link rel=&quot;import&quot; href=&quot;/bower_components/paper-button/paper-button.html&quot;&gt;
&lt;link rel=&quot;import&quot; href=&quot;/bower_components/paper-input/paper-input.html&quot;&gt;
&lt;link rel=&quot;import&quot; href=&quot;/bower_components/paper-fab/paper-fab.html&quot;&gt;
&lt;link rel=&quot;import&quot; href=&quot;/bower_components/core-icons/core-icons.html&quot;&gt;

&lt;polymer-element name=&quot;tt-login&quot; attributes=&quot;userService&quot;&gt;
    &lt;template&gt;

        &lt;style&gt;

            .card {
                margin-top: 64px;
                max-height: 580px;
                max-width: 512px;
                box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
                border-radius: 2px;
                padding: 20px 16px;
                box-sizing: border-box;
                background-color: white;
            }
			
        &lt;/style&gt;

        &lt;div class=&quot;card&quot;&gt;
            &lt;h1&gt;Login&lt;/h1&gt;


            &lt;paper-input floatinglabel label=&quot;Your email&quot; type=&quot;email&quot; value=&quot;{{email}}&quot; error=&quot;Input is not an email!&quot;&gt;&lt;/paper-input&gt;
            &lt;paper-input floatinglabel label=&quot;Your password&quot; type=&quot;password&quot; value=&quot;{{password}}&quot; error=&quot;Input is not an email!&quot;&gt;&lt;/paper-input&gt;

            
            &lt;div horizontal center layout&gt;
                &lt;a href=&quot;/#signup&quot;&gt;&lt;paper-button disabled?=&quot;{{isLoggingIn}}&quot;&gt;Signup&lt;/paper-button&gt;&lt;/a&gt;
                &lt;div flex&gt;&lt;/div&gt;
                &lt;paper-button id=&quot;check&quot; on-click=&quot;{{login}}&quot; disabled?=&quot;{{isLoggingIn}}&quot;&gt;Login&lt;/paper-button&gt;
            &lt;/div&gt;          

            &lt;paper-toast id=&quot;errorToast&quot;&gt;&lt;/paper-toast&gt;
        &lt;/div&gt;        

    &lt;/template&gt;
    &lt;script src=&quot;login.js&quot;&gt;&lt;/script&gt;
&lt;/polymer-element&gt;
[/code]

Its a pretty simple login element with some binding using some of Google's paper elements but hopefully you get the idea.

<h2>2) Create your custom element's script</h2>

<b>login.ts</b>
[code lang="AS3"]
class Login extends PolymerElement {

    userService: UserService;

    email: string;
    password: string;
    isLoggingIn: boolean;

    errorToast: PaperToast;

    ready() {
        this.errorToast = this.$.errorToast;
    }

    login() {
        this.isLoggingIn = true;
        this.userService.login(this.email, this.password)
            .then(user =&gt; this.onUserLoggedIn(user))
            .fail(err =&gt; this.onParseError(err));
    }

    private onUserLoggedIn(u: Parse.User) {
        this.isLoggingIn = false;
        this.fire(&quot;logged-in&quot;);
    }

    private onParseError(error: Parse.Error) {
        this.isLoggingIn = false;
        this.errorToast.text = error.message;
        this.errorToast.show();
    }

}

Polymer(Login.prototype);
[/code]

Here we define the variables that we are going to bind to in the element. We also include the "userService" which is an attribute that is a dependency passed into the element.

Note that im able to use this.$ to access the "errorToast" element by ID. Im able to do this because Login extends a class I wrote called PolymerElement:

[code lang="AS3"]
class PolymerElement {
    $: any;
    style:any;
    fire(eventname: string, payload?: any) { }
    addEventListener(eventName: string, handler: (e : CustomEvent) =&gt; void) { }
} 
[/code]

For now it a bit of a hack to get around the fact that Typescript requires that you implement all elements in an interface so I cant just do "class Login implements HTMLElement".

Note also the call to Polymer:

[code lang="AS3"]
Polymer(Login.prototype);
[/code]

We must pass the prototype into the call then do our variable initting in the ready() function.

<h2>3) Use the element</h2>

Now we can use it pretty easily:

[code lang="HTML"]
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;

    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, minimum-scale=1.0, initial-scale=1.0, user-scalable=yes&quot;&gt;
    &lt;title&gt;Login Example&lt;/title&gt;
        
    &lt;script src=&quot;bower_components/platform/platform.js&quot;&gt;&lt;/script&gt;

    &lt;!-- This is only needed because of the Typescript interface problem! --&gt;
    &lt;script src=&quot;lib/polymer_utils.js&quot;&gt;&lt;/script&gt;

	&lt;!-- Our login element --&gt;
    &lt;link rel=&quot;import&quot; href=&quot;login.html&quot;&gt;

&lt;/head&gt;
&lt;body fullbleed layout vertical unresolved&gt;
	&lt;userService id=&quot;userService&quot;&gt;&lt;/userService&gt;
    &lt;login userService=&quot;{{$.userService}}&quot;&gt;&lt;/login&gt;
&lt;/body&gt;
&lt;/html&gt;
[/code]

I hope that helps other that are looking to do their own tinkering with Typescript and Polymer!

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5426</wp:post_id>
		<wp:post_date><![CDATA[2014-11-02 05:18:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-11-02 05:18:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tinkering-with-google-polymer-and-typescript]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="css"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[Google]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[HTML]]></category>
		<category domain="category" nicename="polymer"><![CDATA[Polymer]]></category>
		<category domain="post_tag" nicename="polymer-2"><![CDATA[polymer]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="typescript"><![CDATA[TypeScript]]></category>
		<category domain="post_tag" nicename="typescript-2"><![CDATA[typescript]]></category>
		<category domain="post_tag" nicename="web-components"><![CDATA[web components]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[5427]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_9f6848bfeabbdf70f9108f251e14ea29]]></wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="940" height="529" src="https://www.youtube.com/embed/8OJ7ih8EE7s?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_time_9f6848bfeabbdf70f9108f251e14ea29]]></wp:meta_key>
			<wp:meta_value><![CDATA[1414905316]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_a8941c9fbcfa751c0e7c5f024d5b1e38]]></wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="940" height="705" src="https://www.youtube.com/embed/INH_OW4lFSs?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_time_a8941c9fbcfa751c0e7c5f024d5b1e38]]></wp:meta_key>
			<wp:meta_value><![CDATA[1414905316]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1509071657;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:5506;}i:1;a:1:{s:2:"id";i:2379;}i:2;a:1:{s:2:"id";i:2189;}}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>863</wp:comment_id>
			<wp:comment_author><![CDATA[use polymer elements in typescript | DiscVentionsTech]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://discventionstech.wordpress.com/2015/03/23/use-polymer-elements-in-typescript/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.0.80.43]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-03-23 10:52:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-03-23 10:52:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] https://www.mikecann.co.uk/programming/tinkering-with-google-polymer-and-typescript/ [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1427107920.8220310211181640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>864</wp:comment_id>
			<wp:comment_author><![CDATA[Writing Polymer apps in Typescript | DiscVentionsTech]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://discventionstech.wordpress.com/2015/05/29/writing-polymer-apps-in-typescript/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.0.81.75]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-05-29 11:15:28]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-05-29 11:15:28]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] https://www.mikecann.co.uk/programming/tinkering-with-google-polymer-and-typescript/ [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1432898128.122004985809326171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>877</wp:comment_id>
			<wp:comment_author><![CDATA[Typescript with Polymer 1.0? - typescript]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://typescript.javacss.space/2016/01/11/typescript-with-polymer-1-0/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[45.32.91.73]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-01-11 17:04:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-01-11 17:04:04]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] found great article had been using polymer 0.5 ( https://www.mikecann.co.uk/programming/tinkering-with-google-polymer-and-typescript/ ) beingness able utilize typescript classes polymer elements. approach no longer works polymer 1.0 [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1452531844.95333099365234375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>

	<item>
		<title>Working with Parse.com in Unity 3D - Part 1 - Intro and App Structure</title>
		<link>https://www.mikecann.co.uk/programming/working-with-parse-com-in-unity-3d-part-1-intro-and-app-structure/</link>
		<pubDate>Tue, 11 Nov 2014 01:24:26 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://www.mikecann.co.uk/?p=5435</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>This is part of a three-post series on working with Parse.com in Unity. For more info please see the other posts in the series:

Part 1 - Intro and App Structure
<a href="https://www.mikecann.co.uk/programming/working-with-parse-com-in-unity-part-2-services-helpers-and-looming/">Part 2 - Services, Helpers and Looming</a>
<a href="https://www.mikecann.co.uk/programming/working-with-parse-com-in-unity-part-3-tests-typescript-and-common-code/">Part 3 - Tests, Typescript and Common Code</a>
</blockquote>

For a while it has been my intention to follow up <a href="https://www.mikecann.co.uk/programming/fixing-unitys-internal-compiler-error/">my work with Parse.com in Unity</a>, but other things have always gotten in the way and thus I have only just managed to get round to it.

Over the past 9 months of working with Parse I have encountered some pretty nasty issues which I decided to solidify by putting together this guide and <a href="https://github.com/mikecann/ParseUnitySampleProject">sample project</a> which I hope will help others out there!

But first..

<h2>What is Parse.com?</h2>

Parse.com is a backend as a service (BaaS). This means they take care of managing servers, operating systems, load balancing and all of that leaving you with a simple API that you can use to get what you need done. 

I have been using Parse for most of my projects of late for a few reasons, mainly its ease of use (more of that later) and incredibly generous pricing:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-10_15-58-19.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-10_15-58-19.png" alt="2014-11-10_15-58-19" width="519" height="501" class="alignnone size-full wp-image-5437" /></a>
(thats about 77 million free API requests per month, per app!)

In comparison to the competition its much cheaper, Microsoft's Azure based Mobile Services for example:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-10_16-00-33.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-10_16-00-33.png" alt="2014-11-10_16-00-33" width="398" height="661" class="alignnone size-full wp-image-5438" /></a>

Parse.com features a simple way to store..

[code lang="csharp"]
var shield = new Armor
{
  DisplayName = &quot;Wooden Shield&quot;,
  IsFireproof = false,
  Rupees = 50
};

shield.SaveAsync();
[/code]

..  and retrieve data:

[code lang="csharp"]
var query = new ParseQuery&lt;Armor&gt;()
    .WhereLessThanOrEqualTo(&quot;rupees&quot;, ((Player)ParseUser.CurrentUser).Rupees);
query.FindAsync().ContinueWith(t =&gt;
{
    IEnumerable&lt;Armor&gt; result = t.Result;
});
[/code]

You can also have routines run on the server written using Javascript:

[code lang="javascript"]
Parse.Cloud.define(&quot;averageStars&quot;, function(request, response) {
  var query = new Parse.Query(&quot;Review&quot;);
  query.equalTo(&quot;movie&quot;, request.params.movie);
  query.find({
    success: function(results) {
      var sum = 0;
      for (var i = 0; i &lt; results.length; ++i) {
        sum += results[i].get(&quot;stars&quot;);
      }
      response.success(sum / results.length);
    },
    error: function() {
      response.error(&quot;movie lookup failed&quot;);
    }
  });
});
[/code]

I wont go into the API any more here but their docs are pretty good and will explain things much better than me: <a href="https://www.parse.com/docs/unity_guide">https://www.parse.com/docs/unity_guide</a>

<h1>Parse Unity Sample Project</h1>

I have provided a simple Sample Project that hopefully should help with explaining how things work:

[embed]https://www.youtube.com/watch?v=nJBf-PccP3E[/embed]

The source code for which can be found on <a href="https://github.com/mikecann/ParseUnitySampleProject">github here</a>.

<h2>Application Structure</h2>

Although Parse.com has a Unity SDK that looks very simmilar to the .Net API, there are some pretty important differences which ill get into later. 

Firstly, everyone's project structure is different and only experience and time will lead you to your own personal preference. For me, I like to setup my project folder like this:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-10_16-15-46.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-10_16-15-46.png" alt="2014-11-10_16-15-46" width="608" height="191" class="alignnone size-full wp-image-5439" /></a>

One folder for the Unity project, one for the Backend and one Common library that is shared between the two.

If you use Visual studio this can all be set into one solution:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-10_16-17-54.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-10_16-17-54.png" alt="2014-11-10_16-17-54" width="365" height="100" class="alignnone size-full wp-image-5440" /></a>

<h3>Frontend (ParseUnitySampleProject)</h3>

This is the Unity project, you can structure this how you like but I have provided a simple login / signup / logged in menus demo to show how I organise the libraries and code within it:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-10_16-51-47.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-10_16-51-47.png" alt="2014-11-10_16-51-47" width="434" height="250" class="alignnone size-full wp-image-5444" /></a>

<h3>Common</h3>

The common project contains code that is common to the frontend and backend. This is usually just models that represent the database, in this case its just a simple class GameUser:

[code lang="csharp"]
[ParseClassName(&quot;_User&quot;)]
public class GameUser : ParseUser
{       
	[ParseFieldName(&quot;playerName&quot;)]
	public string PlayerName
	{
		get { return GetProperty&lt;string&gt;(&quot;PlayerName&quot;); }
		set { SetProperty&lt;string&gt;(value, &quot;PlayerName&quot;); }
	}

	public bool IsPlayerNameSet { get { return !String.IsNullOrEmpty(PlayerName); } }
}
[/code]

Every time you build the common project the DLL that gets created is automatically copied into the game thanks to the build task:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-10_16-22-42.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-10_16-22-42.png" alt="2014-11-10_16-22-42" width="924" height="205" class="alignnone size-full wp-image-5442" /></a>

<h3>Backend</h3>

The backend contains the code that will run on Parse.com and the associated tests:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-10_16-53-18.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-10_16-53-18.png" alt="2014-11-10_16-53-18" width="234" height="231" class="alignnone size-full wp-image-5445" /></a>

I like to use Typescript for my Parse.com backend and so the project is a Typescript project mixed with C# for unit testing. I have provided my unfinished Typescript definition file for parse.com with the project:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-10_16-54-54.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-10_16-54-54.png" alt="2014-11-10_16-54-54" width="838" height="293" class="alignnone size-full wp-image-5446" /></a>

<h2>To be continued..</h2>

In the <a href="https://www.mikecann.co.uk/programming/working-with-parse-com-in-unity-part-2-services-helpers-and-looming/">next part</a> of this post ill talk more about the specifics of how to interact with the Parse.com API in Unity and some special helpers that I have developed to aid with that.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5435</wp:post_id>
		<wp:post_date><![CDATA[2014-11-11 01:24:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-11-11 01:24:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[working-with-parse-com-in-unity-3d-part-1-intro-and-app-structure]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="c"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="polymer-2"><![CDATA[polymer]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="typescript"><![CDATA[TypeScript]]></category>
		<category domain="category" nicename="unity"><![CDATA[Unity]]></category>
		<category domain="post_tag" nicename="unity-2"><![CDATA[unity]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[5436]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_ecf4032b145ef0397676581e92967238]]></wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="940" height="705" src="https://www.youtube.com/embed/nJBf-PccP3E?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_time_ecf4032b145ef0397676581e92967238]]></wp:meta_key>
			<wp:meta_value><![CDATA[1415661971]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1508916039;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:5458;}i:1;a:1:{s:2:"id";i:5451;}i:2;a:1:{s:2:"id";i:4979;}}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>

	<item>
		<title>Working with Parse.com in Unity - Part 2 - Services, Helpers and Looming</title>
		<link>https://www.mikecann.co.uk/programming/working-with-parse-com-in-unity-part-2-services-helpers-and-looming/</link>
		<pubDate>Tue, 11 Nov 2014 01:24:32 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://www.mikecann.co.uk/?p=5451</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>This is part of a three-post series on working with Parse.com in Unity. For more info please see the other posts in the series:

<a href="https://www.mikecann.co.uk/programming/working-with-parse-com-in-unity-3d-part-1-intro-and-app-structure/">Part 1 - Intro and App Structure</a>
Part 2 - Services, Helpers and Looming
<a href="https://www.mikecann.co.uk/programming/working-with-parse-com-in-unity-part-3-tests-typescript-and-common-code/">Part 3 - Tests, Typescript and Common Code</a></blockquote>

In the last post I covered the basic app structure, in this post I want to cover some of the specifics of the front end, the Unity part.

<strong>Note all the code talked about can be found in the <a href="https://github.com/mikecann/ParseUnitySampleProject">Parse Unity Sample Project on Github.</a></strong>

<h2>Services</h2>

I like to split my code up so that all the work that involves dealing with remote services are contained within "Service" classes. The service classes are responsible for taking game data and turning it into a form that the remote service can deal with, then translating the result and passing it back to the game.

In the sample project I have just one service, the UserService, which is responsible for logging a user in or signing them up or logging them out, basically all functionality that that concerns the "GameUser" class. 

<h3>Tasks</h3>

Lets take a look at the Login method in the UserService class:

[code lang="csharp"]
public Task&lt;GameUser&gt; Login(string email, string password)
{
	Debug.Log(&quot;Logging in..&quot;);

	return ParseUser.LogInAsync(email, password)
		.OnMainThread()
		.Then(t =&gt; Task.FromResult((GameUser)t.Result));
}
[/code]

We can see that it takes in an email and password then logs in for us and returns a Task<GameUser>. 

Parse uses Tasks throughout its Unity SDK as a way of handling asynchronicity. You will probably familiar with Tasks if you have done any work with aync / await in C# 5 or greater. 

Unity runs on an old version of C# it doesn't have any concept of Tasks baked in so Parse includes the System.Threading.Tasks namespace. Although Unity does not have any support for async / await you can still use the Tasks API in a <a href="https://www.html5rocks.com/en/tutorials/es6/promises/">Javascript-like Promise way</a>.

Tasks allow us to provide a callback method that will be called when the Task returns, which allows the game to continue on running while we wait for the server to respond. For example, this is how we call Login:

[code lang="csharp"]
private void Login()
{
	isLoading = true;
	userService.Login(usernameInp.text, passwordInp.text)
		.Then(OnLoggedIn, OnLoginError);                
}

private void OnLoginError(Exception e)
{
	isLoading = false;
	menus.ErrorPopup.Open(&quot;Error logging in!&quot;);
}

private void OnLoggedIn(GameUser user)
{
	isLoading = false;        
	menus.States.SetState(&quot;Logged In State&quot;);
}
[/code]

The Then function after login is being called on the Task<GameUser> and is the first of my helper libraries that I have included in the sample project which imports my <a href="https://github.com/mikecann/Unity-Parse-Helpers">Unity Parse Helpers</a> library.

In that library I have included a number of extension methods for Task that allow you to chain functions together for example from the SignupState:

[code lang="csharp"]
private void Signup()
{
	isLoading = true;

	// Signup
	userService.Signup(usernameInp.text, passwordInp.text, playernameInp.text)

		// Then Login
		.Then(t =&gt; userService.Login(usernameInp.text, passwordInp.text))

		// Then we are done
		.Then(OnLoggedIn, OnError);                     
}
[/code]

This makes chaining asynchronous logic together in Unity a breeze and you don't ever have to deal with the headache of using yeild!

<h2>Threading</h2>

The first major headache I came across when using Parse in Unity is to do with threading. Note from my earlier example of Login in UserService:

[code lang="csharp"]
public Task&lt;GameUser&gt; Login(string email, string password)
{
	Debug.Log(&quot;Logging in..&quot;);

	return ParseUser.LogInAsync(email, password)
		.OnMainThread()
		.Then(t =&gt; Task.FromResult((GameUser)t.Result));
}
[/code]

The function "OnMainThread" is a helper extension I wrote to deal with the threading issue. If we were to remove that function then when we try to login Unity would throw an error something like:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-11_08-07-43.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-11_08-07-43.png" alt="2014-11-11_08-07-43" width="667" height="121" class="alignnone size-full wp-image-5455" /></a>

This is because below the covers Parse is making web calls on a separate thread and when it returns the result is passed back to us without returning to be main thread and pretty much everything in Unity needs to happen on the main thread so when we try to access a variable that lives on the main thread Unity crashes.

There are a few ways around this issue, Parse documents that you can <a href="https://www.parse.com/docs/unity_guide#tasks-coroutines">use coroutines</a> to deal with this, but I would really rather not have to use coroutines so instead I used another common solution, a "Loomer". 

A Loomer basically just takes a function and waits until the game is running on the main thread before executing the function. So behind the scenes my "OnMainThread" extension function is calling the loomer which ensures that any Tasks that follow it will execute on the main thread:

[code lang="csharp"]
public static Task&lt;T&gt; OnMainThread&lt;T&gt;(this Task&lt;T&gt; task)
{ 
	var tcs = new TaskCompletionSource&lt;T&gt;();
	var loom = Loom.Instance;

	Action&lt;Task&lt;T&gt;&gt; a = t =&gt;
	{
		loom.QueueOnMainThread(() =&gt;
		{
			if (t.IsFaulted) tcs.SetException(t.Exception);
			else if (t.IsCanceled) tcs.SetCanceled();
			else { tcs.SetResult(t.Result); }
		});    
	};

	task.ContinueWith(a);
	return tcs.Task;
}
[/code]

So whenever you call Parse functions in your services just make sure you call "OnMainThread()" and you should be good to go!

On a separate note, I have already <a href="https://www.mikecann.co.uk/programming/fixing-unitys-internal-compiler-error/">previously mentioned</a> that if you are going to write extension methods for Tasks you must make sure that you sepparate your action from the ContinueWith() else you will get an internal compiler error in Unity!

<h2>Errors</h2>

Unfortunately there is an issue in Unity with Parse that means that we cannot get proper error messages back from the server. For example if a user mistypes their email address when logging in all we get is a HTTP error code like "404 - Not found", this is obviously not particularly helpful. Parse does actually return a better error than which can be seen if you use the Rest or .Net API but whatever reason in Unity that error message gets lost.

This is probably the single biggest drawback with using Parse.com with Unity but it is apparently a <a href="https://www.parse.com/questions/unity-sdk-handling-errors">fundemental issue with Unity</a>. I have <a href="https://groups.google.com/forum/#!topic/parse-developers/s4tw8iiSpAA">started a thread on the Parse Google Group</a> to see if we can get an update on this but im not holding any hope. I did hear a rumor that the new version of the Unity compiler (shipping in Unity 5+) will finally include improvements to network stack.

Generally you can work around it as you can guess what the issue is if an error occurs and handle it in your business logic. Its still really annoying however particularly when it comes to debugging and testing, hence why I have devoted another post to that very subject..

<h2>To Be Continued...</h2>

And thats basically it for dealing with Parse.com in Unity, I strongly reccomend <a href="https://github.com/mikecann/ParseUnitySampleProject">checking out the source</a> if you need more information on anything I have covered, hopefully it makes more sense.

In the <a href="https://www.mikecann.co.uk/programming/working-with-parse-com-in-unity-part-3-tests-typescript-and-common-code/">next part</a> ill talk about how to structure your backend so that you can easily test your cloud code.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5451</wp:post_id>
		<wp:post_date><![CDATA[2014-11-11 01:24:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-11-11 01:24:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[working-with-parse-com-in-unity-part-2-services-helpers-and-looming]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="c"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[github]]></category>
		<category domain="post_tag" nicename="helpers"><![CDATA[helpers]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="parse-com"><![CDATA[parse.com]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="unity"><![CDATA[Unity]]></category>
		<category domain="post_tag" nicename="unity-2"><![CDATA[unity]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[5453]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1508940910;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:5435;}i:1;a:1:{s:2:"id";i:5458;}i:2;a:1:{s:2:"id";i:4973;}}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>

	<item>
		<title>Working with Parse.com in Unity - Part 3 - Tests, Typescript and Common Code</title>
		<link>https://www.mikecann.co.uk/programming/working-with-parse-com-in-unity-part-3-tests-typescript-and-common-code/</link>
		<pubDate>Tue, 11 Nov 2014 01:24:38 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://www.mikecann.co.uk/?p=5458</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>This is part of a three-post series on working with Parse.com in Unity. For more info please see the other posts in the series:

<a href="https://www.mikecann.co.uk/programming/working-with-parse-com-in-unity-3d-part-1-intro-and-app-structure/">Part 1 - Intro and App Structure</a>
<a href="https://www.mikecann.co.uk/programming/working-with-parse-com-in-unity-part-2-services-helpers-and-looming/">Part 2 - Services, Helpers and Looming</a>
Part 3 - Tests, Typescript and Common Code</blockquote>

In the last post I covered how to use Parse.com in Unity itself, in this post I want to talk about to to go about writing backend code.

<strong>Note all the code talked about can be found in the <a href="https://github.com/mikecann/ParseUnitySampleProject">Parse Unity Sample Project on Github.</a></strong>

<h2>Environment</h2>

I briefly talked about App structure in <a href="https://www.mikecann.co.uk/?p=5435">my first post</a>. I like to use use Visual Studio with Typescript and C# for my Backend as they all play nicely together an produce a hassle free way of coding up the backend. 

I like to have the Parse command line app running in develop mode (parse develop "Parse Unity Sample") at the same time so I can see whats happening on the server when I call it, and it allows for very quick iterations:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-11_08-39-16.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-11_08-39-16-1024x268.png" alt="2014-11-11_08-39-16" width="940" height="246" class="alignnone size-large wp-image-5460" /></a>

<h2>Typescript</h2>

I have talked a lot in the past about my love for Typescript and so I love to use it whenever I can. Parse lets you run Javascript code on the server so I use Typescript that compiles to Javascript. To get it to work I first create a Typescript project that has been setup with CommonJS as the module system:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-11_08-40-46.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-11_08-40-46.png" alt="2014-11-11_08-40-46" width="482" height="178" class="alignnone size-full wp-image-5461" /></a>

I then make sure all the code is contained withing the /cloud folder (so that the require() works):

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-11_08-45-22.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-11_08-45-22-1024x324.png" alt="2014-11-11_08-45-22" width="940" height="297" class="alignnone size-large wp-image-5462" /></a>

It works well, particularly when combined with my (not yet finished) Typescript definition for Parse which provides type safety for as much as possible:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-11_08-47-02.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-11_08-47-02.png" alt="2014-11-11_08-47-02" width="502" height="271" class="alignnone size-full wp-image-5463" /></a>

For example, the code that is run before a User is saved looks like:

[code lang="AS3"]
// Force this TS file to become a module
export var x = 2;

Parse.Cloud.beforeSave(&quot;_User&quot;, (request, response) =&gt; {

    // Must have a player name
    if (request.object.get(&quot;playerName&quot;) == null || request.object.get(&quot;playerName&quot;) == &quot;&quot;)
        return response.error(&quot;Must supply a player name when creating a new user&quot;);

    // Email and username must equal
    if (request.object.get(&quot;email&quot;) != request.object.get(&quot;username&quot;))
        return response.error(&quot;Username and email address must be equal&quot;);

    // All done
    response.success();
});
[/code]

<h2>Testing</h2>

Because there is no way to run Parse cloud code offline, all tests must run on code that runs on the Parse servers. At first this sounded really nasty to me and almost put me off using Parse all together but once I realised that I could just create another App for testing and structure my test in such a way that I could isolate each test, I grew to like it, I actually really enjoy writing these tests now.

I like to use NUnit with the Parse .NET SDK for the testing because it lets us use some more advanced C# features such as async / await which the Unity SDK hasn't got access too, and more importantly it returns the server error messages (unlike Unity) which we can test against.

To get started just create a Test class in your Typescript project (surprisingly Typescript projects work well C# within them in Visual Studio) and start testing:

[code lang="csharp"]
namespace ParseUnitySampleBackend.Tests
{
    [TestFixture]
    public class SaveUserTests
    {
        [SetUp]
        public async void Init()
        {
            TestingHelpers.InitParse();
            ParseUser.LogOut();
        }

        [Test]
        [ExpectedException(ExpectedMessage = &quot;Must supply a player name when creating a new user&quot;)]
        public async void RequiresPlayerName()
        {
            var user = new GameUser()
            {
                Username = TestingHelpers.GetRandomUserEmail(),
                Password = &quot;a&quot;
            };
            await user.SignUpAsync();
        }
		
	...
[/code]

I included some simple helpers that I like to use for testing which setup Parse before each test.

If you use Visual Studio's Test Explorer with the parse command line you can get really good feedback on what is happening on the server:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-11_08-59-15.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-11_08-59-15-1024x386.png" alt="2014-11-11_08-59-15" width="940" height="354" class="alignnone size-large wp-image-5464" /></a>

<h2>Common Code</h2>

Because I write my tests in C# and my Unity code is in C# I would like to share my common code between the two projects. Unfortunately simply splitting the project out into a library project then including it as a reference in the testing project doesn't work because Unity requires a different compiler (Unity 3.5 subset on mono) and thus when you try to add that as a reference you get errors related to invalid assemblies:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-11_09-03-05.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-11_09-03-05.png" alt="2014-11-11_09-03-05" width="730" height="73" class="alignnone size-full wp-image-5465" /></a>

The solution I found is to use a little known trick of linking source. To do this select the "Models" folder from the common project and while holding Control and Shift drag it into the Backend project, you should note that the cursor changes to a little shortcut icon and when in the backend project the file icons now have a shortcut icon to indicate they are linked:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-11_09-05-26.png"><img src="https://www.mikecann.co.uk/wp-content/uploads/2014/11/2014-11-11_09-05-26.png" alt="2014-11-11_09-05-26" width="187" height="43" class="alignnone size-full wp-image-5466" /></a>

This means that files are linked to the Common project so they are included in compilation and any changes you make to those files in either the Common project or Backend project will be reflected in the other.

This is perfect as it now lets us compile the same files using a different compiler and version of Parse.

<h2>Conclusion</h2>

Well thats it for my three part post on how to get started using Parse in Unity. I hope it helps some people, please do leave me a comment or email me: mike.cann@gmail.com if you have any questions.

Happy coding!

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5458</wp:post_id>
		<wp:post_date><![CDATA[2014-11-11 01:24:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-11-11 01:24:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[working-with-parse-com-in-unity-part-3-tests-typescript-and-common-code]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="c"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="parse-com"><![CDATA[parse.com]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<category domain="post_tag" nicename="typescript-2"><![CDATA[typescript]]></category>
		<category domain="category" nicename="unity"><![CDATA[Unity]]></category>
		<category domain="post_tag" nicename="unity-2"><![CDATA[unity]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[5453]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1509042290;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:5435;}i:1;a:1:{s:2:"id";i:5451;}i:2;a:1:{s:2:"id";i:5320;}}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>

	<item>
		<title>Unity-Ash Upgrades</title>
		<link>https://www.mikecann.co.uk/programming/unity-ash-upgrades/</link>
		<pubDate>Wed, 10 Dec 2014 11:25:41 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">https://www.mikecann.co.uk/?p=5488</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://www.mikecann.co.uk/portfolio/projects/unity-ashteroids-ash-framework-in-unity/">A while back</a> I decided to scratch an itch and see if <a href="https://www.ashframework.org/">Richard Lord's Ash Entity Framework</a> could be ported to Unity. Well I was pleasantly surprised that it did port quite easily (with some help from David Arno's .NET port) and worked well enough that I could also port <a href="https://github.com/mikecann/UnityAshteroids">Richard's Asteroids game over to Unity</a> too.

Since then I have had a few people contact me interested in using the port for their own projects so I decided to give it a little more love and polish.
<h2>Part 1 - Separation</h2>
First things first was to split the Ash library from the Asteroids example project so you dont have to include the entire Asteroids port in every single one of your games (madness). So now the Unity Ash project can be found here:

<a href="https://github.com/mikecann/Unity-Ash">https://github.com/mikecann/Unity-Ash</a>

..and the Asteroids project (which uses the Untity-Ash project) lives here:

<a href="https://github.com/mikecann/UnityAshteroids">https://github.com/mikecann/UnityAshteroids</a>

Now all that you need to do to is to clone (or include as submodule) Unity-Ash into your game's Assets folder and you should be good to go, simples!
<h2>Part 2 - GetComponents</h2>
Next up was performance. I knew that the performance of Unity-Ash was the biggest stumbling block and unfortunately it seemed like a fairly fundamental one thanks to some holes in the Unity API (more on that later). However, I knew there were a few low-hanging-performance-fruits I could pick that should speed up things a bit.

To experiment with things I setup a separate Unity project for the performance tests and included <a href="https://github.com/mikecann/Unity-Ash">Unity-Ash from GitHub</a>.

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/12/2014-12-10_09-30-51.png"><img class="alignnone wp-image-5492 size-large" src="https://www.mikecann.co.uk/wp-content/uploads/2014/12/2014-12-10_09-30-51-1024x618.png" alt="2014-12-10_09-30-51" width="940" height="567" /></a>

The key performance bottleneck in Unity-Ash is the way the code checks for component additions and removals. Dynamic component addition and removal is key to how Ash functions and in AS3 because it was all custom code we could just fire an event when a component is added or removed from an Entity. Because Unity-Ash tries to piggyback on top of Unity's existing Entity (GameObject) / Component architecture we dont actually have access to the GameObject source and thus cant trigger events when a component is added or removed.

The solution I came up with is to add a component to each GameObject which acts like the Entity. It is responsible for checking to see if components have been added or removed, to do this it gets a list of all the components in the GameObject each frame and compares against its internal cache to see if any have been added or removed. This solution works well, however you can probably see the performance hit involved with getting a list of components from Unity for each GameObject, each frame will likely be quite high.

Because this listing of components was so crucial to performance I decided to write some tests to see what is the fastest way of doing that:

[code lang="csharp"]
public class GetComponentTests : MonoBehaviour
{
	public int iterations = 10000000;
	public int repeats = 3;

	public GameObject noComponents;
	public GameObject manyComponents;
	public List&lt;Component&gt; components;

	public void TestAll()
	{
		components = new List&lt;Component&gt;();
		TestHelpers.Execute(iterations, repeats, &quot;Empty Function&quot;, TestEmpty);
		TestHelpers.Execute(iterations, repeats, &quot;Get Components With No Components&quot;, NoComponentsGetComponents);
		TestHelpers.Execute(iterations, repeats, &quot;Get Components With Many Components&quot;, ManyComponentsGetComponents);
		TestHelpers.Execute(iterations, repeats, &quot;Get Components With No Components List&quot;, NoComponentsGetComponentsList);
		TestHelpers.Execute(iterations, repeats, &quot;Get Components With Many Components List&quot;, ManyComponentsGetComponentsList);

		Debug.Log(&quot;components &quot; + components.Count);
	}        

	public void TestEmpty()
	{
	}

	public void NoComponentsGetComponents()
	{
		noComponents.GetComponents&lt;Component&gt;();
	}

	public void ManyComponentsGetComponents()
	{
		manyComponents.GetComponents&lt;Component&gt;();
	}

	public void NoComponentsGetComponentsList()
	{
		noComponents.GetComponents&lt;Component&gt;(components);
	}

	public void ManyComponentsGetComponentsList()
	{
		manyComponents.GetComponents&lt;Component&gt;(components);
	}
}
[/code]

I run each of these 10 million times then repeat 3 times and average:

1) "TestEmpty" is my control test test to get a sense of the cost of simply calling an empty function. That averaged to 0ms elapsed
2) "NoComponentsGetComponents" I test getting a list of components when the GameObject is empty (other than Transform), that averaged to 22ms.
3) "ManyComponentsGetComponents" I test getting a list of components when there are 20 components (plus Transform) to see what the cost of getting additional components would be, that averaged to 35ms.
4) "NoComponentsGetComponentsList" is the same as 2) except I avoid an internal memory allocation my passing in a List to populate the return with, that averaged to 5ms.
5) "ManyComponentsGetComponentsList" is the same as 3) except I pass in the List again, that averaged to 15ms.

So in summary, I learned its much faster if I pass in a list to GetComponents, which makes sense as I avoid the memory allocation associated with returning a new array each time. As a result I folded this performance improvement into Unity-Ash.
<h2>Part 3 - Unity vs Ash</h2>
These tests are all well and good but 10 million iterations of GetComponents in standalone is probably an unlikely use case in the standard game so in addition I wanted to test what the actual performance hit you would get if you used Unity-Ash in a game instead of the standard Unity way.

To test this I set up another scene that creates and updates 5,000 asteroids on the screen.

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/12/upout.jpg"><img class="alignnone wp-image-5498 size-full" src="https://www.mikecann.co.uk/wp-content/uploads/2014/12/upout.jpg" alt="upout" width="1024" height="619" /></a>

I time how long they create then I count how many frames I get in 10 seconds of updating them. Each asteroid has a 2D rigid body and a very simple controller script that wraps the Asteroids position on the screen:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/12/2014-12-10_10-15-54.png"><img class="alignnone wp-image-5496 size-full" src="https://www.mikecann.co.uk/wp-content/uploads/2014/12/2014-12-10_10-15-54.png" alt="2014-12-10_10-15-54" width="455" height="520" /></a>

[code lang="csharp"]
public class AsteroidController : MonoBehaviour
{
	private Bounds bounds;

	void Awake()
	{
		var size = Camera.main.ScreenToWorldPoint(new Vector2(Screen.width, Screen.height));
		bounds = new Bounds(Vector3.zero, new Vector3(size.x * 2, size.y * 2));
	}

	void Update()
	{
		if (transform.position.x &lt; bounds.min.x)
		{
			transform.position = new Vector3(transform.position.x + bounds.size.x, transform.position.y, transform.position.z);
		}
		if (transform.position.x &gt; bounds.max.x)
		{
			transform.position = new Vector3(transform.position.x - bounds.size.x, transform.position.y, transform.position.z);
		}
		if (transform.position.y &lt; bounds.min.y)
		{
			transform.position = new Vector3(transform.position.x, transform.position.y + bounds.size.y, transform.position.z);
		}
		if (transform.position.y &gt; bounds.max.y)
		{
			transform.position = new Vector3(transform.position.x, transform.position.y - bounds.size.y, transform.position.z);
		}
	}
}
[/code]

This was the base test and it took about 440ms to create 5000 asteroids and processed 83 frames over 10 seconds (8.3FPS).

Now I had my base I decided to setup the same scenario but using Unity-Ash to drive the updates. So now the Asteroid looks like this:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/12/2014-12-10_10-19-42.png"><img class="alignnone wp-image-5497 size-full" src="https://www.mikecann.co.uk/wp-content/uploads/2014/12/2014-12-10_10-19-42.png" alt="2014-12-10_10-19-42" width="454" height="533" /></a>

Notice that there is no controller for the Asteroid, now all the update logic happens in a system:

[code lang="csharp"]
public class MovementSystem : SystemBase
{
	private Bounds bounds;
	private NodeList nodes;

	public MovementSystem()
	{
		var size = Camera.main.ScreenToWorldPoint(new Vector2(Screen.width, Screen.height));
		bounds = new Bounds(Vector3.zero, new Vector3(size.x * 2, size.y * 2));
	}

	override public void AddToGame(IGame game)
	{
		nodes = game.GetNodeList&lt;MovementNode&gt;();
	}

	override public void Update(float time)
	{
		var cam = Camera.main;
		for (var node = (MovementNode)nodes.Head; node != null; node = (MovementNode)node.Next)
		{
			var transform = node.Transform;
			var rigidbody = node.Rigidbody;

			if (transform.position.x &lt; bounds.min.x)
			{
				transform.position = new Vector3(transform.position.x + bounds.size.x, transform.position.y, transform.position.z);
			}
			if (transform.position.x &gt; bounds.max.x)
			{
				transform.position = new Vector3(transform.position.x - bounds.size.x, transform.position.y, transform.position.z);
			}
			if (transform.position.y &lt; bounds.min.y)
			{
				transform.position = new Vector3(transform.position.x, transform.position.y + bounds.size.y, transform.position.z);
			}
			if (transform.position.y &gt; bounds.max.y)
			{
				transform.position = new Vector3(transform.position.x, transform.position.y - bounds.size.y, transform.position.z);
			}
		}
	}

	override public void RemoveFromGame(IGame game)
	{
		nodes = null;
	}
}
[/code]

The update logic is functionally exactly the same as the AsteroidController except its now contained within a system.

This time it took 595ms to create the Asteroids and we processed 33 frames over 10 seconds (3.3FPS).

So immediately you can see there is a large performance hit in using Ash-Unity over regular Unity (8.3FPS compared to 3.3FPS). To confirm that it was the extra overhead of checking for new components on each asteroid rather than the internal updating mechanism of the Systems in Ash I decided to turn off checking for component updates..

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/12/2014-12-10_10-40-02.png"><img class="alignnone wp-image-5493 size-full" src="https://www.mikecann.co.uk/wp-content/uploads/2014/12/2014-12-10_10-40-02.png" alt="2014-12-10_10-40-02" width="738" height="65" /></a>

Sure enough the frame rate went back up (in fact higher!) than the Unity update rate of 8.3FPS to 8.6FPS.

So with this in mind I decided to add an option to the Entity component that lets you choose how often it checks for new components:

<a href="https://www.mikecann.co.uk/wp-content/uploads/2014/12/2014-12-10_10-42-02.png"><img class="alignnone wp-image-5494 size-full" src="https://www.mikecann.co.uk/wp-content/uploads/2014/12/2014-12-10_10-42-02.png" alt="2014-12-10_10-42-02" width="445" height="534" /></a>

The reasoning is that its actually quite rare that you change the components after the initial creation of the object (at least that's what I found) and thus by reducing the number of times the Entity component checks for updates we should be able to increase the performance.

Sure enough, when set to "Every Other Frame" the framerate goes up to 4.5FPS then set to "Every 10 Frames" it goes up to 7.4 FPS. The final setting "If Component Count Changes" attempts to skip the iteration of the components by comparing the number of components against the previous frame, this results in 7.5 FPS.

So the short of the long is that you can get the same as or higher FPS using Unity-Ash so long as you know beforehand how often you are going to be added or removing components. If you have entities that is likely never to have components added or removed then set it to update "Never" and enjoy great FPS with the power of using Ash.

Just as an addendum to this, I have submitted a feature request to Unity to add in events to GameObject that we can listen to that are fired when components are added or removed, this would obviously remove 99.9% of these performance issues from Unity Ash so I would love your votes:

<a href="https://feedback.unity3d.com/suggestions/componentadded-slash-removed-events-on-gameobject">https://feedback.unity3d.com/suggestions/componentadded-slash-removed-events-on-gameobject</a>

As a final step in the upgrade process I looked at what more radical changes we could make to the framework by taking advantage of Generics and some other features that C# gives us that were lacking in AS3, you can check those out towards the bottom of the readme: <a href="https://github.com/mikecann/Unity-Ash">https://github.com/mikecann/Unity-Ash</a>

Well that's it for now, I hope you enjoy the improvements, please to let me know if you think its worth carrying on development, I would love to work on it some more but I have games to write!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5488</wp:post_id>
		<wp:post_date><![CDATA[2014-12-10 11:25:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-12-10 11:25:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[unity-ash-upgrades]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ash"><![CDATA[ash]]></category>
		<category domain="post_tag" nicename="asteroids"><![CDATA[asteroids]]></category>
		<category domain="category" nicename="c"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="components"><![CDATA[components]]></category>
		<category domain="post_tag" nicename="entity"><![CDATA[entity]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="unity"><![CDATA[Unity]]></category>
		<category domain="category" nicename="unity-ash"><![CDATA[Unity-Ash]]></category>
		<category domain="category" nicename="unityasteroids"><![CDATA[UnityAsteroids]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[5489]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_e49c04eb7a16847ee4ba7b53462975ca]]></wp:meta_key>
			<wp:meta_value><![CDATA[<a href="https://i.imgur.com/9N1E75g.png"><img src="https://i.imgur.com/9N1E75gh.png" alt="" width="940" height="568" /></a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_time_e49c04eb7a16847ee4ba7b53462975ca]]></wp:meta_key>
			<wp:meta_value><![CDATA[1418209771]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1508880628;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:5296;}i:1;a:1:{s:2:"id";i:5756;}i:2;a:1:{s:2:"id";i:5782;}}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>

</channel>
</rss>
